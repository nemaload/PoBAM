%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Fig3_v2.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: adammarblestone
%%CreationDate: 8/20/13, 3:04 PM
%%BoundingBox: 0 0 426 309
%%HiResBoundingBox: 0 0 425.9790 308.9850
%%CropBox: 0 0 425.9790 308.9850
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 27295 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-21:37:19        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
   pdf:Producer="Adobe PDF library 9.90"
   xmp:ModifyDate="2013-08-20T14:36-04:00"
   xmp:CreateDate="2013-08-18T15:02:45-04:00"
   xmp:CreatorTool="Adobe Illustrator CS5.1"
   xmp:MetadataDate="2013-08-20T14:36-04:00"
   xmpMM:DocumentID="xmp.did:306F4C3A2208E31182BBBF4CEDA56229"
   xmpMM:InstanceID="uuid:42c16fdd-ac03-4be6-9837-ab448909eeb1"
   xmpMM:OriginalDocumentID="b531615c-cf1a-11e2-0000-9661d2266897"
   xmpMM:RenditionClass="proof:pdf"
   dc:format="application/pdf"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False">
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="176"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9AX/AJxnZpbTT7OT68JD&#xA;CDLxorcyqEryFefBqeG1c1uTXHeMIniuvx73KjpxzJ2TTVPMFtpumXF1KPXuLSNZLmzhZGlXlTci&#xA;uwFa18Mzo5Adr9XUOLk9Iutku0zzZPqOryIkBttMtopJbiebhx4ciscnMP8ADy9N/hK7AbnfadtU&#xA;clnyTH/FnlX/AKvNj/0kw/8ANWFtd/izyr/1ebH/AKSYf+asVWr5x8ouzqut6ezRnjIBdQkq1A1D&#xA;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"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:dda6b47a-4d4d-d84e-b2e0-2cc7cf49ad19"
    stRef:documentID="xmp.did:62035E78BACCE21188D2CD29C6658E39"
    stRef:originalDocumentID="b531615c-cf1a-11e2-0000-9661d2266897"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:61035E78BACCE21188D2CD29C6658E39"
      stEvt:when="2013-06-03T23:01:24-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:62035E78BACCE21188D2CD29C6658E39"
      stEvt:when="2013-06-03T23:14:39-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:306F4C3A2208E31182BBBF4CEDA56229"
      stEvt:when="2013-08-18T15:02:45-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS5.1"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">SNRvsEverything</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmpTPg:MaxPageSize
    stDim:w="5.916368"
    stDim:h="4.291456"
    stDim:unit="Inches"/>
   <xmpTPg:Fonts>
    <rdf:Bag>
     <rdf:li
      stFnt:fontName="Arial-ItalicMT"
      stFnt:fontFamily="Arial"
      stFnt:fontFace="Italic"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 5.08"
      stFnt:composite="False"
      stFnt:fontFileName="ariali.ttf"/>
     <rdf:li
      stFnt:fontName="ArialMT"
      stFnt:fontFamily="Arial"
      stFnt:fontFace="Regular"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 5.10"
      stFnt:composite="False"
      stFnt:fontFileName="arial.ttf"/>
     <rdf:li
      stFnt:fontName="SymbolMT"
      stFnt:fontFamily="Symbol"
      stFnt:fontFace="Regular"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 5.00"
      stFnt:composite="False"
      stFnt:fontFileName="symbol.ttf"/>
    </rdf:Bag>
   </xmpTPg:Fonts>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -308.985 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 308.985 li
425.979 308.985 li
425.979 0 li
cp
clp
[1 0 0 1 0 0 ]ct
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OXVQMX+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /OXVQMX+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3210325d73000000cc000000606376
7420a11cd7eb0000012c000006546670676dcc79599a000007800000066e
676c7966d4a68a070000884c0000488e68656164de7154f100000df00000
0036686865611233162200000e2800000024686d74785f35fc5600000e4c
000035646c6f636103b796ae000043b0000035686d61787012b40d800000
7918000000206e616d6539af6efb00007938000003547072657025d64dbf
00007c8c00000bbe67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002affc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200004
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
4043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8ff
f060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012
435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c
5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b000
5458212043b0005558b00325b00325b8ffc038b8ffc038591bb040545820
43b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ffc038
b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a4623
20468a608a61b8ff8062232010238ab902c202c28a70456020b0005058b0
0161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140
0188535a58b910000020885458b202010243604259b12401885158b92000
0040885458b2020202436042b12401885458b2022002436042004b014b52
58b2020802436042591bb940000080885458b202040243604259b9400000
8063b80100885458b202080243604259b94000010063b80200885458b202
100243604259b94000020063b80400885458b20240024360425959595959
2d2cb0024354584b53234b515a58381b2121591b21212121592d00000001
00000005199a9c2a20a35f0f3cf5081b080000000000a2e3272a00000000
c9acc9bbfaaffd671000080c00000009000100010000000000010000073e
fe4e00431000faaffa7a1000000100000000000000000000000000000d59
06000100000000000239000002390000023900b002d7005e047300150473
0049071d0077055600580187005a02aa007c02aa007c031d004004ac0072
023900aa02aa0041023900ba0239000004730055047300df0473003c0473
00560473001a047300550473004d047300610473005304730055023900b9
023900aa04ac007004ac007204ac00700473005a081f006f0556fffd0556
009605c7006605c7009e055600a204e300a80639006d05c700a4023900bf
04000037055600960473009606aa009805c7009c063900630556009e0639
005805c700a10556005c04e3003005c700a105560009078d001905560009
0556000604e300290239008b023900000239002703c100360473ffe102aa
00590473004a0473008604000050047300460473004b0239001304730042
0473008701c7008801c7ffa20400008801c7008306aa0087047300870473
0044047300870473004802aa00850400003f02390024047300830400001a
05c700060400000f040000210400002802ac0039021400bc02ac002f04ac
00570556fffd0556fffd05c70068055600a205c7009c0639006305c700a1
0473004a0473004a0473004a0473004a0473004a0473004a040000500473
004b0473004b0473004b0473004b023900bd023900230239ffe502390009
047300870473004404730044047300440473004404730044047300830473
0083047300830473008304730049033300800473006b0473001b04730051
02cd006d044c000104e3009905e5000305e50003080000e102aa00de02aa
003d0464004e080000010639005305b4009a0464004e0464004d0464004d
0473fffd049c00a003f4003805b4007a069600a1046400000231000002f6
002f02ec002d0625007f071d004404e3008104e3009e02aa00e804ac0072
046400540473002e0464003304e5001a047300860473008c080000ef0556
fffd0556fffd0639006308000081078d00520473fffc0800000002aa0053
02aa004701c7008001c7006c0464004e03f4002f04000021055600060156
fe390473ffe402aa005c02aa005c040000170400001704730049023900b9
01c7006c02aa0047080000250556fffd055600a20556fffd055600a20556
00a20239008d0239ffe00239000402390015063900630639006306390063
05c700a105c700a105c700a1023900c602aa001902aa000602aa001d02aa
002e02aa00e502aa00a202aa006b02aa003a02aa004b02aa002804730000
01c700030556005c0400003f04e3002904000028021400bc05c7fffd0473
004905560006040000210556009e0473008704ac007204ac00a102aa006b
02aa001902aa002106ac006b06ac006b06ac0021047300000639006d0473
0042023900b10556005c0400003f05c700660400005005c7006604000050
04730046046bffe102aa00ee0556fffd0473004a0556fffd0473004a05c7
009e04eb004705c7fffd055600a20473004b055600a20473004b04730096
01c7004204730096025500880473009a02ac008305c7009c0473008705c7
009c04730087063900630473004405c700a102aa008505c700a102aa003c
0556005c0400003f04e300300239002404e300300300002305c700a10473
008305c700a10473008304e300290400002804e3002904000028046800a4
063900600662005504a00048047400480391006204f000440329002e0530
0048046bffe1040000b002eb005208c000330800004f040000990800004f
040000990800004f040000980400009807d5016a05c0009e04ab007204d5
009d04ac007104d5022204d5010505abffe9050001c905ab027e05abffe9
05ab027e05abffe905ab027e05abffe905abffe905abffe905abffe905ab
ffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905abffe9
05ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab
01c005ab01c005abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d50092
0800000007eb013007eb012007eb013007eb012004d500b204d5008004d5
002a082b0198086b01b807550010060000f40600006f0440003a05400037
04c0003f04150040040000250600005505e100bf038d008904d5ffd90180
008002d50086071500610296000f04d5009202d6008302d6008304d500b2
02d600700556fffd0473004a05c700660400005005c70066040000500556
00a20473004b055600a20473004b055600a20473004b0639006d04730042
0639006d047300420639006d0473004205c700a40473008705c7001f0473
00060239ffce0239ffce0239ffe40239ffe40239fff60239fff50239004b
01c700190400003701c7ffa20556009604000088040000860473009601c7
fffa05c7009c0473008705c900a50473008b063900630473004406390063
0473004405c700a102aa006b0556005c0400003f04e300300239000c05c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
078d001905c70006055600060400002101c700890556fffd0473004a0800
0001071d00440639005304e30081023900b9078d001905c70006078d0019
05c70006078d001905c70006055600060400002101c7008a02aaffe10473
001b04cd005a06ac006b06ac002206ac002206ac004a02aa00e202aa006b
02aa00de02aaffea0557ffff0646ffa706b4ffa80312ffa80632ffa706d8
ffa70605ffa701c7ff780556fffd055600960558fffe055600a204e30029
05c700a4023900bf055600960558000b06aa009805c7009c0533006d0639
006305c700a40556009e04f2009404e30030055600060556000906af007f
05fb0061023900040556000604a00048039100620473008b01c7006b0460
0088049a008c04000019038700480473008b0473005c01c7008904000086
04000018049c00a00400001a0395005c04730044048d008303db00560460
00880433001105b4007a063f005701c7ffc9046000880473004804600088
063f0057055700a206eb0032045500a105c000640556005c023900bf0239
0004040000370875000d081500a406d5003104a900a10515000a05c000a0
0556fffd054000a705560096045500a1056b0000055600a20763000704d5
004e05c000a105c000a104a900a10540001206aa009805c700a406390063
05c000a00556009e05c7006604e300300515000a061500520556000905eb
009f05550057075500a1078000a106550000071500a8054000a505c00055
081500a405c7001a0473004a0495005b0440008802eb008804ab00000473
004b055afffb03ab003204780087047800870380008604ab00180580008c
046b00880473004404550088047300870400005003aa0026040000210695
004b0400000f0495008a042b0045066b008d0695008d0500002805c0008b
042b008404150030060000890455001f0473004b0473000002eb00890415
004b0400003f01c700880239000901c7ffa2074000130680008304730000
0380008604000021046b008803e900a1034a008808000041089500a00585
002d000001010000001e0000003100000031000001010000007e0000007e
0000008c0000008c000001010000001000000101000001210310007d0000
008c023300d20000030b0000ff04023900b9048100690456003203310019
0411002d04d1009601f9009b030f005f04ca009b04b8008c01f9009b0413
002803b0005003b4003c04ca009b04cf005001f9009b02d2003c0498005a
043c00190488006e045f007303b1001903d4000a0466009604130028058e
00640524002803f2009b03f2009b03f2009b01e3005a0356005a0686009b
01f9ffac041300280413002803b4ff5703b4ff570448002d058e0064058e
0064058e0064058e00640481006904810069048100690456003203310019
0411002d04d10096024b0000034a000004b8008c024b00000413002803b0
005003b4003c04cf005002d2003c0498005a0488006e045f007303d4000a
0466009604130028058e00640524002801f9009b0456003203b00050045f
0073049b003c0000ffdc0000ff250000ffdc0000fe51028d00ab028d00a0
02da0043034d007901a8ffba000000460000004600000046000000460000
00480000004600000046000000460435017c0435012e043500b704350081
0435012c043500be043500af043500810435009a043500db04350085028d
00c1043500b3060001000600010002420036060001000435009e04350098
043500cb0600010006000100060001000600010006000100000000460600
010006000100060001000600010006000100060001000600010006000100
051bffba06000100060001000600010005b5003a05b5003a01f4ffba01f4
ffba060001000600010006000100060001000481003604350036043dffba
043dffba03e9004a03e9004a067f0014077600140327ffba041effba067f
0014077600140327ffba041effba051b003204b500240300fff706000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010000000030
0000004600000046000000400000004606000100060001000000ffdc0000
fe510000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ff160000ff160000ffdc0000ff160000ffdc0000ff200000ffdc0473
004a08000000060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010006000100060001000600010006000100028d
007f028d005d0600010004ee0015034d007901a8000e01d6ffdc01a80056
01d60010037500320375003201a8002d01d60013051b003204b5002401f4
ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4ffba
024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba02b3
005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba
06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a0036
0435ffba0327ffba064f0027064f00270224ffba021affba04a7004604a7
00460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d0047
040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba0435
00450435004501f4ffba01f4ffba024200360300fff7039affba0327ffba
0375003203750032051b003204b50024051b003204b5002401f4ffba01f4
ffba045a004004ce0049045a002604ce0039045a005304ce004a045a0053
04ce004a0600010006000100000000460000004606000100060001000600
010000000046000000460600010006000100000000480000004606000100
060001000600010000000046000000460000004600000046000000400000
003006000100000000460000004606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d00ca028d00c7028d
00c606000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000100ffba0800ffba1000ffba06dc0063053f004406d5
00a1055b00830000fddc0000fc2f0000fca60000fe540000fcd70000fd73
0000fe290000fe0d0000fd110000fc670000fd9d0000fbf50000fc720000
fed50000fed50000ff02041b00a006ac006b06ac00190000feb60000fd73
0000fe080000fca60000fe530000fd110000fbc80000faf40000faaf0000
fc720000fbaa0000fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb98
0000fdea0000fe840000fdc20000fcf10000fd5f0000fe760000febc0000
fceb0000fd6c0000fd580000fc900000fd150000fc2c0000fc130000fc12
0000fb960000fb9601c700880556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b0239006301c7001f
023900ba01c7007c06390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406390063
0473004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004406dc0063053f004405c700a10473008305c700a104730083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
008306d500a1055b00830556000604000021055600060400002105560006
040000210556fffd0473004a0239ffe201c7ffb0063900630473004405c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
05c700a1047300830000fefe0000fefe0000fefe0000fefe0455fffd02eb
000c07630007055afffb04a900a10380008604a900a10380008605c700a4
046b00880473fffd040000140473fffd04000014055600090400000f0555
0057042b0045055500a10473008706050063047300550639006004730044
05b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4001001f4
001b01f4001001f4006b01f4fff90227ffce0000000f0000fff502aa00a4
02aa00a40000000e00000056000000560000ffcf01a8000f01d6ffbf01a8
fff501d6ffcd01a8001d01d6fff501a8009301d600130375003203750032
0375003203750032051b003204b5002405b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba0481003604350036043dffba043dffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3003202b3003202b3005f02b3005f
02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f02b3
005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba064f0027064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba04a7004604a7004604a7004604a70046093e0032093e
00320740ffba0740ffba067f0014077600140327ffba041effba04cf002d
04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba040d0047040d004701a8ffba01a8ffba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba043500450435004501f4ffba01f4ffba043500450435
00450435004504350045043500450435004501f4ffba01f4ffba04350045
043500450481003604350036043dffba043dffba024200360300fff7031a
001a031a001a031a001a0375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
0032037500320375003203750032051bffba04b5ffba051b003204b50024
01f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba01f4
ffba051b003204b50024067f0045067f0045067f0045067f004501a80028
0000fe290000fea20000ff300000ff1d0000ff120000ff920000fe7e08fc
003208ad00320000ffb50000ffb60000feed0000ff640000fe7e0000ff9f
018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff580000
ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba045a002a039a00360435ffba0327ffba034d007902b400230242
003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4006d
067f00140776001401f9009b0000fed902bc000003f2009b045afff504ce
fff5045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a04350071043500ad045a
000f04ce000f0473001406110014054000a7047300860540000a0473000a
05c7005105c700660400005005c7fffd067a00140540004a047300460474
00480556006e04d5005304e3ffc40639006d04fe000f070c008701c70083
0239001f055600960400008801c7001504000018072000a405c7ffb80473
008b0639006006f200630557004406090014047300860556009e0556006b
0400004f04f20094030b00440239002404e300140239002404e3003005fb
006105c700a1062e00100400002104e300290400002804e3002904e30031
045c0044045c003f0473003c0473005503ab003203e50024047300870214
00bc034e00bc04ac0072023900b00aaa009e09c7009e08640046087f0096
06aa0096039c008309c7009c078e009c062b0087047300550556fffd0473
004a0000fefe0556fffd0473004a08000001071d00440639006d0473001a
0639006d0473004205560096040000880639006304730044063900630473
004404e30029045c004c01c7ffa20aaa009e09c7009e086400460639006d
04730042084600a404f2009e05c7009c047300870556fffd0473004a0556
fffd0473004a055600a20473004b055600a20473004b0239ff8a0239ff64
023900040239fff60639006304730044063900630473004405c700a102aa
ffcc05c700a102aa006805c700a10473007605c700a1047300830556005c
0400003f04e3003002390024045c0051037e001305c700a40473008705a6
00a404d6005e0486005e04e30029040000280556fffd0473004a055600a2
0473004b06390063047300440000fefd0639006304730044063900630473
004406390063047300440556000604000021047300570473004804730086
04730086040000130400005004730046047300460473005505e9005503ab
004903ab0032050d0032040f00440239ffb9047300420473004204780050
0402001904ef00190473008b047300870473008701c7001901c7005702d9
0044029e0000026e001401c700830493008306aa008406aa008406aa0087
0473ffa60473008b046c00870473004406530044063f00570466004402aa
ffe402aaffe402aaffe402aa008502aa008502aa008502aaffe40455008a
0455008a0400003f01c7ffa20214ffb901c7ff7202cb00000239000f0239
002404730019048c0054046000880400001a05c700060400001804280019
0400002804540028045c004c045c00790400002404000050040000240400
00500639006304400088040f004904780050046b0088032e000004000008
033b008804730048040000240400005007b7004607400046080b004605b3
0024036f002405c00024061c0013054a0083050f008303e2001e04380063
03110064031100640146ffce01eb006401eb000001eb000002ea006403d9
0000029100000187005a02d7005e01c7008001c7006c01c7008a02aa00fb
02aa00fb02ca003202ca003204ac007004ac007004ac006504ac006502aa
012102aa00de02aa005902aa012102aa001d02aa005902aa00de023900b6
023900b602aa00fb02aa00fb02aa00a602aa00a602aa00a602aa001d02aa
ffe202aafffb029400000142006402b8003202a0000002ca003203100096
0310009603100096031000960310009602aa006202aa006202aa002802aa
001d02aa0047045700960457009604570096045700960457004304570043
045700430457004304570043031000430457002f0457002f0457002f0457
002f0457002f0310002f0457002504570025045700250457002504570025
0310002f0457001a0457001a0457001a0457001a0457001a0310001a0457
004204570042045700420457004204570042031000420457009604570096
045700960457009604570042045700420457004204570042045700420310
00420457002f0457002f0457002f0457002f0457002f0310002f0457002f
0457002f0457002f0457002f0457002f0310002f04570026045700260457
002604570026045700260310002604570042045700420457004204570042
045700420310004204570096045700960457009604570096045700420457
004204570042045700420457004203100042045700260457002604570026
045700260457002603100026045700230457002304570023045700230457
0023031000230457002f0457002f0457002f0457002f0457002f0310002f
0457004b0457004b0457004b0457004b0457004b0310004b045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457001a0457001a0457001a0457001a0457001a0310001a0457
002404570024045700240457002404570024031000240457002f0457002f
0457002f0457002f0457002f0310002f0457004e0457004e0457004e0457
004e0457004e0310004e045700960457009604570096045700960000fec1
0000fec60000fdac0000fed80000ff920000fee90000ff4c0000fea00000
fec40000ffce0000ff660000fea00000fed80000fed80000ff970000ff98
0000ff990000fff40000ff420000ff420000ff440000ff5f0000fe870000
ffec0000ffa60000ff510000ff510000ff510000fec90000ff1c00000000
0000fee90000ff4c0000ff930000ff2a0000ff560000ffce0000fe870000
febb0000fec40000fec40000fed80000fed80000feb30000fec90000fdad
0000fec80000feb30000fec90000fdad0000fe160000fee60000ffa60000
fe870000ff440000feba0000ff230000ff9a0000fdac0000fe8800000000
0000feb00000ff980000fe930000ffa60000fe870000fe1c0000ff660000
ff440000feb00000feb00000feb00000ff030000ff520000fd1f0000ff53
0000ff530000ff530000feb50000feb50000ffc30000feae0000fedc0000
fec70000fec80000fedc0000fe1e0000ff420000ff510000feb70000feb0
02aa00de02aa005902aa00fa049a007004600000062e001407aa0000062e
0014047b004c063f005704cf0044063900630473004405c7007004000050
04e300a8033b008804ff0000043c0032060d000a049d0042072000a406aa
0084056500630473008b056400a40400000a0556006b0556006b04e00005
04c5001905e5005f046e004403b600140347002804cf00440495005b0400
005001c7ffa2063900600389004d03890050055600a205c000a10473004b
047800870ab4006d04fe00100639001404e70014079900bf05b500880558
000104000006072e00bf0590008806a10078057b007a086d00bf06f00088
04d5006603ab001f065f0039058200480639006004730044066d0009050c
001a066d0009050c001a08980063072c004406aa002004e6001c0987006d
06d000500000fe370ab4006d04fe001005c7006604000050040700140000
fea60000febc0000ff980000ff980000fc2b0000fc4c05c000a104780087
05400004042b00140556009e04730087055d00a40464008804d5004e03ab
003204a900040380000005ef002904490028070900a4052f0088091800a0
06f600880606003e042b002305c700660400005004e3003003aa00260767
00310587002605550057042b004506e4000a0554000a06e4000a0554000a
023900bf07630007055afffb055700a1046800860540001204ab001805c7
00a4046b008805c700a4046b008805550057042b004506aa00980580008c
02aa002e0556fffd0473004a0556fffd0473004a08000001071d00440556
00a20473004b060500630473005507630007055afffb04d5004e03ab0032
04d5004e045c004c05c000a10478008705c000a104780087063900630473
0044063900600473004405c0004a0415002b0515000a040000210515000a
040000210515000a0400002105550057042b0045071500a805c0008b0540
004a0473004607bf004a0703004607a6006606860053054d006604130053
07c3001207470018084600a4070700880639006d0478005005f900300553
00260000ff430000fec90000ff770000ffb00000ff470000ff560000ff74
0000fed70000feac000000000000ff520000ff56000000000000feac0000
fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac0000ff7f
0000ff560000fdef0000ff430000ff690000ff7c000000000000fdae0000
ff8c000001020000fefe0000fefe0000fedf0000fedf0000ff580000ff20
0000fefe0556fffd0473004a055600960473008605560096047300860556
00960473008605c700660400005005c7009e0473004605c7009e04730046
05c7009e0473004605c7009e0473004605c7009e04730046055600a20473
004b055600a20473004b055600a20473004b055600a20473004b055600a2
0473004b04e300a8023900130639006d0473004205c700a40473008705c7
00a40473008705c700a40473008705c700930473006805c700a404730087
0239ffdf01c7ff9202390020023900060556009604000088055600960400
008805560096040000880473009601c7007e0473009601c7ffb904730096
01c7ffa50473009601c7ffa306aa009806aa008706aa009806aa008706aa
009806aa008705c7009c0473008705c7009c0473008705c7009c04730087
05c7009c0473008706390063047300440639006304730044063900630473
004406390063047300440556009e047300870556009e0473008705c700a1
02aa008505c700a102aa008505c700a102aa005e05c700a102aa00260556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
0556005c0400003f04e300300239002404e300300239002404e300300239
ffff04e300300239000e05c700a10473008305c700a10473008305c700a1
0473008305c700a10473008305c700a104730083055600090400001a0556
00090400001a078d001905c70006078d001905c70006055600090400000f
055600090400000f055600060400002104e300290400002804e300290400
002804e3002904000028047300870239000305c70006040000210473004a
01c7008904a0004804a0004804a0004804a0004804a0004804a0004804a0
004804a000480556fffd0556fffd06820013068200130682001306820013
068200560682005603910062039100620391006203910062039100620391
0062061e0000061e0000076c0000076c0000076c0000076c00000473008b
0473008b0473008b0473008b0473008b0473008b0473008b0473008b068f
0000068f0000081f0000081f0000081f0000081f0000081ffff3081ffff3
01c7008101c7008101c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7
ffa20301000003010000049100000491000004910000049100000491fff3
0491fff3047300440473004404730044047300440473004404730044069d
0000069d0000082d0000082d000007c9000007c900000460008804600088
0460008804600088046000880460008804600088046000880682000007ae
00000812000007ae0006063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a000480391006203910062
0473008b0473008b01c7ffe601c700680473004404730044046000880460
0088063f0057063f005704a0004804a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd06820013068200130682
00130682001306820056068200560473008b0473008b0473008b0473008b
0473008b0473008b0473008b0473008b068f0000068f0000081f0000081f
0000081f0000081f0000081ffff3081ffff3063f0057063f0057063f0057
063f0057063f0057063f0057063f0057063f0057065f0000065f000007ef
000007ef0000078b0000078b0000078bffff078bffff04a0004804a00048
04a0004804a0004804a0004804a0004804a000480556fffd0556fffd0556
fffd0556fffd0556fffd02aa00e502aa00fd02aa00e502aa000602aa0006
0473008b0473008b0473008b0473008b0473008b068200000682000006f3
000006f3000005c700a402aa001302aa001302aa000601c7ffbb01c7ffab
01c7ffca01c7ffca01c7ff9301c7ff930239001a0239fff5036500000365
000002aa001302aa001302aa000604600088046000880460008804600088
048d0083048d00830460008804600088055600060556000606e600000718
0000061e000002aaffea02aaffea02aa0059063f0057063f0057063f0057
063f0057063f005707650000069d000007270000065f000005fb006102aa
00de02aa00e50473000d05c7006605c7006606aa008705c70024095000a1
078d00190556001f04e30030080000290400003004c100660000ff530000
ff530000ff530000ff5301c7001901c7ffa2042b00050556001105740046
02cbffa3057a008702f0ffc8057f000a057f000a02aa008402aa008402aa
00c902aa00c902aa00a002aa005902aaffaf02aa003a02aa0006023900b9
02aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a0000
ff730000ffa50000fed80000ff230000ff720000ff720000fee70000ffa5
0000ff530000ff530000ff530556009e0473008703f8001905fb0019071d
00440440001904000050046900870469001903eb008703ab003201c70088
0361004104000088033600100580008c04780087047300440400001304de
004404de004404de000d078d005003a800440473004404730044042b0084
0455001f0455001f03aa00260460008804c6004405de004404c600440400
001a05c700060400002803ab0032036b003f04db001f02eb00880400001a
04550088042b008405b4007a04ab001803a00000054f0000035100320351
ffd103980032034800320348003203f80032036e0032015600690284002d
0366003202d000320415003203710032036f003204180032030f00320359
0032039c003203760031036f003204fb000002fa003202fa003203040032
04cc0032030500640305003202f9003202f90032028c0032028c00320304
00320142006402b6006404950064030f00640305003202d5003203050032
030500320306006401c20032030f00640342003204950064029200000320
00000315006402920000030600320385003202bf00000142006401eb0064
030f0064029200000315006402920000030900320385003202bf000005ed
00460a660046061300460689ffba0541ffba01e9003c045a00110000ff0d
0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e0000
feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039affba
0327ffba05ad0069053d002d05fd009604dc005004e0003c05f6009b053f
00280650002804ac00720000fe3b0000fe660000fe660473fffc02aa0053
02d5ffce01a8ffba01a8ffba01a8ffba01a8ffba0658001509c500470400
000008000000040000000800000002ab0000020000000155000004730000
02390000019a000000ab00000000000005e5000305c7006606aa00980580
008c0744008307180046071800480556fffd05c70066040000140473000a
04e300300400004f0400002804a5001d000001020000ff420000febf0000
ff3a0000ff53048d000a05c7005105c7006605c70051045500a102eb0088
0000ff430000ff040000ffac02d200960000ff37021affba0250001e0000
ff3a0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a
05b5003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3003202b3003202b3
005f02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba
045a002a039a00360435ffba0327ffba045a002a039a00360435ffba0327
ffba045a002a039a00360435ffba0327ffba064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba02b4002302b400230327ffba0327ffba02b4002302b4
00230327ffba0327ffba043500450435004501f4ffba01f4ffba04350045
0435004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d
0047040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0473ff93047300460239ffbf06aa
ffd50473ffb70473ff9102aaffa402aaffa40400ffff0239ffb904000028
04730089030b0064047400480649002401c7001901c700190473001e0460
001e048c000a04730086047300460239001305b400420400008801c7fffc
06aa00870473008b0473008702aafffb0400003f0318ffa20400001a0400
000f040000280473004a04730048047300460473004b03ab004903ab0032
0534005501c700880400001301c7ffa204730083045c004c0304006402d5
003202c9003302fc0032028c003201d5003201d500000304003203110064
01420019014200640142006401420019022a000001420064014200090233
00640493006404930064030fffc9030f0064030e00640305003203000032
02b800320142ffca01c20032030f001d031a00320306006402d400640292
000002de003202de003202de003202f4003202ea00320000febc0000febc
0000ff730000fea9023900b902fa003202f900320305003202a0000002f9
00320639006d0556fffd0473000f05c7006602aa004104a0004804a00048
04a0004804a0004804a0004804a0004804a0004804a0004801c7ff9b01c7
ffab01c7ff9b01c7ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb04600088
0460008804600088046000880460008804600088046000880460008801c7
ffab01c7ffab01c7ffbb01c7ffbb04600088046000880460008804600088
045a005304ce004a03a000130556001105c700290558000b055600a20473
004b0400003301c7ffa205e600630473004805c7000002aa000f05560006
0400002104000013040000500400001301c700830455fffd02eb00010556
00090400000f055600090400000f04d5005303ab00490540001204ab0018
0000fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff720000
ff730000fee7078b000a03eb004c040000130473000a01c700150473fff4
0556001105c700a1047300190239ff8b05c700a404730087055600960400
008804e30029040000280400003b049e00a403670088053000480000ff53
0000ffbc0000fefe0000fefe0000fea40000fea401c7008805c900a505c7
009c05c900a50000fecd0000ff480000fec90000fece0000fec50000fed0
0000fed10000feee0000fed60000fedc0000fdd90639005804730048078d
001905c70006059f00a40000feb905dc006304c60009084c001906ba0006
023900b9038000720187005a0187005a0400009904000099023900b00239
00b0023900b002aa001904e3003004730050000000000000002a0000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
002a0000002a000000aa0000015000000150000001500000015000000196
00000196000001960000040c000005120000078e000009c400000bb60000
0e1600000e1600000ec200000ec200000ec200000ec200000ec200000ec2
00000ec200000ec200000ec200000ec200000ec200000ec200000ec20000
103e000011200000112000001120000011200000125a0000125a0000125a
0000125a000015b8000017a0000017a0000017a0000017a000001a4a0000
1da400001ea600001ea600001ea600002186000021860000218600002186
000021860000218600002186000021860000218600002186000024d40000
26fc0000294800002b6600002d7000002ee00000312600003126000032f4
000032f4000032f40000345a000037a40000399e00003bb400003dac0000
3dac00003ec600004308000044720000464400004644000046440000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e0000488e0000488e0000488e0000488e0000488e
0000488e0000488e0000488e0000488e0000488e0000488e0000488e0000
488e0000488e0000488e000100000d5900f2003c009d000700020010002f
0056000004ac0bbe000500020000000e00ae0000000300000000006a0000
00000003000000070062006a0001000000000000003500cc000100000000
0003000e01010001000000000004000e010f0001000000000006000e011d
00010000000000070031012b0003000104090000006a015c000300010409
0001001c01c60003000104090002000e01e20003000104090003001c01f0
0003000104090004001c020c0003000104090006001c0228000300010409
00070062024400a90020003200300031003100200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e002e00200041006c006c002000520069006700680074
0073002000520065007300650072007600650064002e0041007200690061
006c00200069007300200061002000740072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e002e
a9203230313120546865204d6f6e6f7479706520436f72706f726174696f
6e2e20416c6c205269676874732052657365727665642e4d4d5351465a2b
417269616c4d544d4d5351465a2b417269616c4d544d4d5351465a2b4172
69616c4d54417269616c20697320612074726164656d61726b206f662054
6865204d6f6e6f7479706520436f72706f726174696f6e2e00a900200032
00300031003100200054006800650020004d006f006e006f007400790070
006500200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e004d004d005300510046005a002b004100720069
0061006c004d00540052006500670075006c00610072004d004d00530051
0046005a002b0041007200690061006c004d0054004d004d005300510046
005a002b0041007200690061006c004d0054004d004d005300510046005a
002b0041007200690061006c004d00540041007200690061006c00200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e002e00>
<b900540328b326181fd0bc032900e0032900020329b22b1d1fb90327031d
b23b1f40b80323b31215320f412d03200001002f0320000100200320006f
032000af032000bf03200004005f031e00010010031e007f031e0080031e
00af031e00bf031e00d0031e00060000031e0010031e0020031e006f031e
009f031e00e0031e0006031d031cb2201f1041270319007f03190002000f
031700ef031700ff03170003001f0317002f0317004f0317005f0317008f
0317009f03170006000f0317005f0317006f0317007f031700bf031700f0
0317000600400317b2923340b80317b28b3340b80317b36a6c3240b80317
b2613340b80317b35c5d3240b80317b357593240b80317b34d513240b803
17b344493240b80317b23a3340b80317b331343240b80317b32e423240b8
0317b3272c3240b80317b312253280b80317b30a0d32c04116031600d003
16000200700316000102c4000f0101001f00a0031500b003150002030600
0f0101001f00400312b32426329fbf03040001030203010064001fffc003
01b20d1132410a02ff02ef0012001f02ee02ed0064001fffc002edb30e11
329f414a02e200af02e200bf02e2000302e202e202e102e1007f02e00001
001002e0003f02e0009f02e000bf02e000cf02e000ef02e0000602e002e0
02df02df02de02de000f02dd002f02dd003f02dd005f02dd009f02dd00bf
02dd00ef02dd000702dd02dd001002dc0001000002dc0001001002dc003f
02dc000202dc02dc001002db000102db02db000f02da000102da02daffc0
02d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b2
171b32b9ffc002d3b2121632b802d2b2f9291fb90326031cb23b1f40bb03
22003e00330322b225311fb80318b23c691fb802e3b3202b1fa0413002d4
00b002d40002000002d4001002d4002002d4005002d4006002d4007002d4
0006006002d6007002d6008002d6009002d600a002d600b002d600060000
02d6001002d6002002ca002002cc002002d6003002d6004002d6005002d6
000802d0b2202b1fb802cfb226421f411602ce02c70017001f02cd02c800
17001f02cc02c60017001f02cb02c50017001f02c902c5001e001f02ca02
c6b21e1f00410b02c6000002c7001002c6001002c7002f02c5000502c1b3
24121fff411102bf0001001f02bf002f02bf003f02bf004f02bf005f02bf
008f02bf000602bf0222b2641f12410b02bb00ca0800001f02b200e90800
001f02a600a20800406a1f4026434932402043493240263a3d3240203a3d
329f209f26024026969932402096993240268e923240208e92324026848c
324020848c3240267a813240207a813240266c763240206c76324026646a
324020646a3240265a5f3240205a5f3240264f543240204f5432b8029eb7
24271f374f6b0120410f0277003002770040027700500277000402770277
027700f90400001f029bb22a2a1fb8029a402b292a1f80ba0180bc018052
0180a201806501807e01808101803c01805e01802b01801c01801e018040
0180bb0138000100800140b40180400180bb013800010080013940180180
ca0180ad018073018026018025018024018020013740b80221b2493340b8
0221b2453340b80221b341423240b80221b33d3e320f410f0221003f0221
007f0221000300bf022100cf022100ff0221000300400221b320223240b8
0221b3191e3240b80222b32a3f3240b80221b32e3a326f414802c3007f02
c3008f02c300df02c30004002f02c3006002c300cf02c30003000f02c300
3f02c3005f02c300c002c300ef02c300ff02c3000600df02220001008f02
220001000f0222002f0222003f0222005f0222007f022200ef0222000600
bf022100ef02210002006f0221007f022100af02210003002f0221003f02
21004f0221000302c302c30222022202210221401d101c102b1048038f1c
010f1e014f1eff1e023700161600000012110811b8010db6f70df8f70d00
094109028e028f001d001f0290028f001d001f028fb2f91d1fb80198b226
bb1f41150197001e0401001f013900260125001f013800730401001f0135
001c0801001f0134001c02ab001f0132b21c561fb8010fb2262c1fba010e
001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b21fd51c
b802abb61fd41c891fc92fb80801b21fbc26b80101b21fba20b80201b61f
b91c381fadcab80401b21f8126b8019ab21f7e26b8019ab61f7d1c471f6b
1cb80401b21f6526b8019ab21f5e73b80401400f1f52265a1f481c891f44
1c621f4073b80801b61f3f1c5e1f3c26b8019ab21f351cb80401b61f301c
bb1f2b1cb80401b61f2a1c561f291cb80101b21f231eb80401b21f5537b8
0168402c07960758074f07360732072c0721071f071d071b071408120810
080e080c080a080808060804080208000814b8ffe0402b00000100140610
000001000604000001000410000001001002000001000200000001000002
010802004a00b013034b024b5342014bb0c063004b6220b0f65323b8010a
515ab005234201b0124b004b5442b0382b4bb807ff52b0372b4bb007505b
58b101018e59b0382bb00288b801005458b801ffb101018e851bb0124358
b900010111858d1bb900010128858d5959001816763f183f123e11394644
3e113946443e113946443e113946443e11394660443e11394660442b2b2b
2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa
1d59b0324b5358b0ff1d594bb09353205c58b901f201f04544b901f101f0
45445958b9033e01f2455258b901f2033e4459594bb8015653205c58b900
2001f14544b9002601f145445958b9081e0020455258b90020081e445959
4bb8019a53205c58b9002501f24544b9002401f245445958b90909002545
5258b9002509094459594bb8040153205c58b173244544b1242445445958
b917200073455258b9007317204459594bb8040153205c58b1ca254544b1
252545445958b9168000ca455258b900ca16804459594bb03e53205c58b1
1c1c4544b11e1c45445958b9011a001c455258b9001c011a4459594bb056
53205c58b11c1c4544b12f1c45445958b90189001c455258b9001c018944
59594bb8030153205c58b11c1c4544b11c1c45445958b90de0001c455258
b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c45
6523456023456560234560b08b766818b080622020b163594565234520b0
03266062636820b003266165b059236544b063234420b13b5c4565234520
b003266062636820b003266165b05c236544b03b2344b1005c455458b15c
406544b23b403b4523614459b347503437456523456023456560234560b0
89766818b080622020b134504565234520b003266062636820b003266165
b050236544b034234420b147374565234520b003266062636820b0032661
65b037236544b0472344b10037455458b137406544b24740474523614459
004b5342014b5058b108004259435c58b108004259b3020b0a124358601b
2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342
b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f23
42b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b
7475737500184569444569444569447373737374757374752b2b2b2b7475
2b2b2b2b2b73737373737373737373737373737373737373737373737373
2b2b2b45b0406144737400004bb02a534bb03f515a58b1070745b0406044
59004bb03a534bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03a
515a58b1030345b040604459004bb02e534bb03c515a58b1090945b8ffc0
6044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b43
5c58b9008002bbb301401e017400735903b01e4b5402b0124b545ab01243
5c5a58ba009f02220001007359002b7473012b01732b2b2b2b2b2b2b2b73
7373732b2b2b2b2b002b2b2b2b2b2b004569447345694473456944737475
456944734569444569444569447374456944456944732b2b2b2b2b732b00
2b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b737475732b737475737475
2b2b2b742b2b000000>
[15789 2787 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 406 19 <00020055ffe7041105c00010001d020f400d0f0c0c0c42550f0c0b0b4255
06b8ffe840110c0c425505180b0b425507100b0b42551bb8ffe8400b0b0b
42550f0c0b0b42551bb8fff440160d0d42551c060d0d42550f0c0d0d4255
07100d0d4255b10202435458400a1a1e0405141e0d0d1709b8ffe8b40f0f
025509b8ffe840190d0d02550911000c0f0f025500160c0c0255000c0d0d
0255002f2b2b2bcd2f2b2bcd003fed3fed31301bb10602435458400a1a1e
0405141e0d0d1709b8fff4b40f0f065509b8ffe6b40d0d065509b8ffee40
190b0b0655091100100d0d065500100c0c065500100b0b0655002f2b2b2b
cd2f2b2b2bcd003fed3fed31301bb4062019101cb8fff0b202200bbeffe0
0016ffe00012ffe0000fffe0404e04068702880b880fc90e0509070b1802
45134c154a19431b54135c155c19521b6b076b0b63136c156b19601b7902
7706760b7a0f870698079610c918da02d606d60bdb0f1a1a1e0405141e0d
0d17b8fff4b40c0c425517b8fff2b40b0b425517b8fff840140d0d425517
730940212334300901000910090209b8fff4b40b0b425509b8ffe8401c0d
0d425509901f110c0c0c4255110e0b0b425511080d0d4255117300b8ffc0
40202123342000400002000c0c0c425500080b0b425500080d0d42550090
1ec78b182b10f62b2b2b5d2bed2b2b2b10f62b2b5d712bed2b2b2b003fed
3fed3130015d71005d0038383838380138383859592b2b2b2b2b2b2b2b2b
002b2b131012363332161612151002062322272613101633323611102623
220706556bd3a076b274426ad3a1d47991b9a97c7ca9a97e7c4a5d02d301
04013dac5fb3feffdafefefec3ad98b7019dfe97eff00168016aee698600
>OXVQMX+ArialMT AddT42Char 
2 1036 20 <000100df000002fb05c0000a00da40440a0c0c0c4255000c0c0c42550a0e
0b0b4255000e0b0b42550a080d0d425500080d0d425503400d11346b047f
028f02990804ac04010900060502030905010c0201ca0a00b8ffc0400a21
233430000120000100b8ffe0b41010025500b8ffea40110f0f0255001c0c
0c0255000e0d0d025500b8fff040190f0f065500100c0c065500100d0d06
55001a0c05400d0f3405b8ffc0400e212334300501200540050205190bba
013c018500182b4e10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c
003f3f17390111393130015d005d2b012b2b2b2b2b2b2123110606073536
36373302fbb441d35497e22f74047b3e7c1fae47ca5f>OXVQMX+ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>OXVQMX+ArialMT AddT42Char 
OXVQMX+ArialMT /CharStrings get begin
/zero 19 def
/one 20 def
end
OXVQMX+ArialMT /Encoding get
dup 48 /zero put
dup 49 /one put
pop
end
%ADOEndSubsetFont
/CLCRMY+ArialMT /OXVQMX+ArialMT findfont ct_VMDictPut/CLCRMY+ArialMT*1 [48{/.notdef}rp /zero /one 206{/.notdef}rp]CLCRMY+ArialMT nfCLCRMY+ArialMT*1 [10 0 0 -10 0 0 ]msf43.916 284.799 mo(10)[5.56 0 ]xshCLCRMY+ArialMT*1 [6.6667 0 0 -6.6667 0 0 ]msf54.4678 279.212 mo(1)sh1 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
50.7266 271.867 mo
371.623 271.867 li
@
82.3813 271.867 mo
82.3813 270.005 li
@
101.623 271.867 mo
101.623 270.005 li
@
114.658 271.867 mo
114.658 270.005 li
@
125.21 271.867 mo
125.21 270.005 li
@
133.899 271.867 mo
133.899 270.005 li
@
140.727 271.867 mo
140.727 270.005 li
@
146.934 271.867 mo
146.934 270.005 li
@
152.52 271.867 mo
152.52 270.005 li
@
157.485 271.867 mo
157.485 270.005 li
@
157.485 271.867 mo
157.485 268.142 li
@
189.761 271.867 mo
189.761 270.005 li
@
208.383 271.867 mo
208.383 270.005 li
@
222.037 271.867 mo
222.037 270.005 li
@
231.969 271.867 mo
231.969 270.005 li
@
240.658 271.867 mo
240.658 270.005 li
@
247.485 271.867 mo
247.485 270.005 li
@
253.692 271.867 mo
253.692 270.005 li
@
259.278 271.867 mo
259.278 270.005 li
@
264.244 271.867 mo
264.244 270.005 li
@
264.244 271.867 mo
264.244 268.142 li
@
296.521 271.867 mo
296.521 270.005 li
@
315.141 271.867 mo
315.141 270.005 li
@
328.796 271.867 mo
328.796 270.005 li
@
339.348 271.867 mo
339.348 270.005 li
@
347.416 271.867 mo
347.416 270.005 li
@
354.865 271.867 mo
354.865 270.005 li
@
361.071 271.867 mo
361.071 270.005 li
@
50.7266 271.867 mo
374.067 271.867 li
@
82.3813 271.867 mo
82.3813 270.005 li
@
101.623 271.867 mo
101.623 270.005 li
@
114.658 271.867 mo
114.658 270.005 li
@
125.21 271.867 mo
125.21 270.005 li
@
133.899 271.867 mo
133.899 270.005 li
@
140.727 271.867 mo
140.727 270.005 li
@
146.934 271.867 mo
146.934 270.005 li
@
152.52 271.867 mo
152.52 270.005 li
@
157.485 271.867 mo
157.485 270.005 li
@
157.485 271.867 mo
157.485 268.142 li
@
%ADOBeginSubsetFont: OXVQMX+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OXVQMX+ArialMT gcheck setglobal} if
2 1298 21 <0001003c0000040705c0001e0218b90007ffe8b40c0c425508b8fff8b40b
0b425507b8ffe8b40b0b425508b8fff8b40d0d425507b8fff4b30d0d4255
b10602435458400911100d18131306550db8fff4b4111106550db8ffee40
09101006550d1e14051eb8ffe84017131306551e1e111106551e1c0e1006
551e0c0d0d06551eb802bb400c020a1717201f10110202201f1112392fd4
cd1112392fcd002fed2b2b2b2b3fed2b2b2bc43231301bb1020243545840
0911100d0c121202550db8fff440090f1102550d1e14051eb8ffe0400b12
1302551e140f1102551eb802bbb2020a17b8ffe8b40b0b025517b8ffec40
0e0d0d02551717201f10110202201f1112392fd4cd1112392f2b2bcd002f
ed2b2b3fed2b2bc43231301b40363b053b06bb05bf06bb07c708c91c0749
0c590c540e6b0c640e7a127a138912bc12e51ae51bf01a0cbf0bb713021b
101c101d101e1006befff00007ffe00008fff00009fff0401a1e0a100806
06ca1c1a141c1c1a081c1a030102081a1c030d1e10b802a4b34f110111b8
0118b50d1e1405001eb802bbb301020c0ab8fff4b40c0c42550ab8fff2b4
0b0b42550ab8fff840100d0d42550a7317d30000014021233401bb028100
2000100138400c11b53f025f026f027f020402ba0224001f018fb18b182b
10f65df4ed10f62b3c10f4ed2b2b2b003f3cfd3c3fedfd5de41112173901
11121739870e2e2b0e7d10c401111239313000383838380138383838005d
015d7259592b2b2b2b2b2515212637363637363635342623220607273636
33321615140606070606070407fc37021725a39aefa8997b829c01b913f8
d1d3f648a7c2a25c1eadad413c63c07ec4e5666b939c8a13cfd9eaad58aa
bca488613100>OXVQMX+ArialMT AddT42Char 
OXVQMX+ArialMT /CharStrings get begin
/two 21 def
end
OXVQMX+ArialMT /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CLCRMY+ArialMT*1 [48{/.notdef}rp /zero /one /two 205{/.notdef}rp]CLCRMY+ArialMT nfCLCRMY+ArialMT*1 [10 0 0 -10 0 0 ]msf150.038 285.178 mo(10)[5.56 0 ]xshCLCRMY+ArialMT*1 [6.6667 0 0 -6.6667 0 0 ]msf160.589 279.591 mo(2)sh189.761 271.867 mo
189.761 270.005 li
@
208.383 271.867 mo
208.383 270.005 li
@
222.037 271.867 mo
222.037 270.005 li
@
231.969 271.867 mo
231.969 270.005 li
@
240.658 271.867 mo
240.658 270.005 li
@
247.485 271.867 mo
247.485 270.005 li
@
253.692 271.867 mo
253.692 270.005 li
@
259.278 271.867 mo
259.278 270.005 li
@
264.244 271.867 mo
264.244 270.005 li
@
264.244 271.867 mo
264.244 268.142 li
@
%ADOBeginSubsetFont: OXVQMX+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OXVQMX+ArialMT gcheck setglobal} if
2 1934 22 <00010056ffe6041605c0002b01b4b603180c0c425505b8ffe8b40c0c4255
05b8ffe8b30d0d4255b10202435458400b1918400d0d0255181c0001b8ff
c0402b0c0d02550129230a0d0f0c0f1e0a0a29151e1c041e291c05290d23
0d0c181901001220100c0c0255200726b8ffe8b40c0d0255262f2bcd2f2b
cd2fcd2fcd2f0012393f3f10ed10ed12392fedc610c6123910c42b3210c4
2b3231301b4028050d160d450d860d0445115711761b0352166c106a1464
16750d7914860d8a14891ba50d0a052003b8ffe0400b0b0c0d0e04070123
0d0c01b802a4b340000100bb01180029000d0135b40c0c150418ba02a400
1902684009151e1c05041e290d12b8fff4b40c0c425512b8fff2b40b0b42
5512b8fff840140d0d425512735f206f200220180d0d0655208007b8fff4
b40c0c425507b8fff2b40b0b425507b8fff840140d0d4255077326402123
34302601002610260226b8fff4b70d0d065526902d18b80138b219d301ba
01380000ffc0400b212334200040000200902cb80192b18b182b10f65d2b
edf4ed10f62b5d712bed2b2b2bf42b5ded2b2b2b003fed3fedfde4111239
2fed10fd5de411123901111217393130013838015d005d017159012b2b2b
133716163332363534262322073716333236353426232206072736363332
161615140607161615140023222656b41f956b7fafa27d334c14120b73b8
866a698c14b421eaae78ca6b66648290fee8d6c1ff0183189987b0827ca1
149e02787d6382848420b5c767b2645f9c2e1ebd8ec0fef5e600>OXVQMX+ArialMT AddT42Char 
OXVQMX+ArialMT /CharStrings get begin
/three 22 def
end
OXVQMX+ArialMT /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CLCRMY+ArialMT*1 [48{/.notdef}rp /zero /one /two /three 204{/.notdef}rp]CLCRMY+ArialMT nfCLCRMY+ArialMT*1 [10 0 0 -10 0 0 ]msf256.796 285.178 mo(10)[5.56 0 ]xshCLCRMY+ArialMT*1 [6.6667 0 0 -6.6667 0 0 ]msf267.347 279.591 mo(3)sh296.521 271.867 mo
296.521 270.005 li
@
315.141 271.867 mo
315.141 270.005 li
@
328.796 271.867 mo
328.796 270.005 li
@
339.348 271.867 mo
339.348 270.005 li
@
347.416 271.867 mo
347.416 270.005 li
@
354.865 271.867 mo
354.865 270.005 li
@
361.071 271.867 mo
361.071 270.005 li
@
%ADOBeginSubsetFont: OXVQMX+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OXVQMX+ArialMT gcheck setglobal} if

2 0 3 <> OXVQMX+ArialMT AddT42Char 
2 42 11 <0001007cfe51026005d30010003d400a270f0100101207081010b80133b3
009f0e08b801334011079f0e5e0003100320030303ac119d8c182b10f65d
fdf6ed10f6ed003f3c3f3c3130015d012602113437363733060706070615
100101df95ce4d5abc8179273d232b012bfe51bc01f8010eeedafdfbd059
8a96bbbdfe1ffe20>OXVQMX+ArialMT AddT42Char 
2 170 12 <0001007cfe51026005d300100065400c2802281002090a1001001209b801
33b30a9f0301b80133b4009f035e0eb8fff0b4101002550eb8fff8b40f0f
02550eb8ffe4b40d0d02550eb8ffec400f0a0a02550f0e1f0e020eac129d
8c182b10f65d2b2b2b2bfdf6ed10f6ed003f3c3f3c3130015d1323001134
272627262733161716151002fd81012b2b223d277a81bc5a4dcffe5101e0
01e1bcb9968a5ad2fbfddaeefef2fe08>OXVQMX+ArialMT AddT42Char 
2 336 16 <0001004101b8026a026d0003002c401970027003024d014d020201230002
1a05700001001904708d182b4e10e45d10e6002f4ded31300071015d1335
211541022901b8b5b500>OXVQMX+ArialMT AddT42Char 
2 2500 23 <0002001a0000041005ba000a000d01b7b9000cfffa40ac0c0c42550d060c
0c4255050c0c0c4255060c0c0c4255090c0c0c42550a0c0c0c4255050e0b
0b4255060e0b0b4255090e0b0b42550a0e0b0b425507080c0c425508080c
0c425507080b0b425508080b0b425507080d0d425508080d0d425505080d
0d425506080d0d425509080d0d42550a080d0d425512580c680c9a0ca90c
c90c054c034c0d94040312010208000c060307050a0b0307000c0c0d0dca
030414030304030d00020c0d040703bb02bb0008000201a0400a00040400
0c0c00ca0a04b80266b705050a401d1f340ab8ffe0b4101002550ab8ffe6
b40d0d02550ab8ffeeb40d0d06550ab80137400d07402223340780213507
900f02b8ffc0400b0d14340002100220020302b8ffe0b40d0d025502b8ff
e4b60d0d065502b50eb8018cb18b182b10ec2b2b5d2b10f62b2bf42b2b2b
2b3c10e610fd3c003f3f10f43cf63c1139390111123939872e2b047d10c4
0f0f0f313001435c58b9000dffdeb212390db8ffd4400b333903222d3903
041d1d3c2b2b2b2b595d005d435c5840140c400b390c8050390c4026390c
221c390c402d392b2b2b2b2b59012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b002b21112135013311331523110311010296fd84029d93c6c6b4fe
35015fa503b6fc4aa5fea102040295fd6b00>OXVQMX+ArialMT AddT42Char 
2 4384 44 <000100bf0000018105ba00030122401902020c0c425503020c0c42550207
0b0b425503070b0b425501b8fff9b40b0b425500b8fff940110b0b425502
050c0d425503050c0d425501b8fffbb40c0d425500b8fffb400a0c0d4255
010200080205b8ffc0b3383d3405b8ffc0b333343405b8ffc0b32d303405
b8ffc0b328293405b8ffc0b323253405b8ffc0b31d1e3405b8ffc0b3181a
3405b8ffc0402a0d103420059005af050303200100008f00a000b000042f
0040005000df00f000051220008f0090000305b8ffc0400b0d0d02550018
1010025500b8ffecb40f0f025500b8ffeeb40d0d025500b8fff640100c0c
025500200b0b065500a204d659182b10f62b2b2b2b2b2b5d435c58b28000
01015d5971723cfd5d2b2b2b2b2b2b2b2b3c003f3f3130012b2b2b2b2b2b
2b2b2b2b33113311bfc205bafa46>OXVQMX+ArialMT AddT42Char 
2 5560 49 <0001009c0000051f05ba000901bcb603180c0c425508b8ffe8b50c0c4255
120bb8ffc0400a13153408180c16025503b8ffe8401d0c16025508020303
200708140707080207030308090402020907080403b8fffbb40c0c425503
b8fff2b40b0b425503b8fffb40090c0c42550320060605b8ffecb40f0f02
5505b8fff2400b0d0d025505120c0c025505b8fff740260b0b0655055d20
0b01200b500b600b700b800b050b08090e0b0b4255090a0c0c4255092001
00b8ffc0400d13153420000100201010025500b8fff6b40f0f025500b8ff
f6b40d0d025500b8fffa400b0c0c025500040b0b065500b8fff7b40c0c06
5500b8fff8400a0d0d0655005d0a3b59182b10f62b2b2b2b2b2b2b5d2b3c
fd2b2b3c105d71f42b2b2b2b3c10fd2b2b2b3c003f3c3f3c123939011139
3987042e2b877dc4b10602435458b90003ffe0b70c113408200c1134002b
2b5931302b2b012b435c58b40840463903b8ffc0b646390840323903b8ff
c0b632390722193902b8ffdeb619390722323902b8ffdeb6323907222339
02b8ffde400b2339070e1439070e133902b8fff4b61339070e1d3902b8ff
f4b61d39070e153902b8fff8b115392b2b2b2b2b2b2b012b2b2b2b2b2b00
2b2b2b2b59002b2b331133011133112301119cc70302bac7fcfe05bafb81
047ffa460480fb80>OXVQMX+ArialMT AddT42Char 
2 6048 53 <000200a1000005ad05ba00180022023a4021120b0e0112361c5a1f66086d
1f0409100d0d065508100d0d065507100d0d065524b8ffc0b40c0c02550d
b8fff4b40c0c02550cb8fff4b40c0c02550bb8fff4b40c0c025512b8ffe2
b3121a3412b8fff0b322273411b8ffe2b31d273410b8ffe2b31d27340fb8
ffe2b31d273412b8ffd8b31d263411b8ffe2b3121a3410b8ffe2b3121a34
0fb8ffe24049121a34250e4a1c4a20530b5c1c6d1c7209780e790f850a88
0f970da90fb80fe80ee70f100e0c0c20110f1411110f110f0c09121b0221
1a160a061211100d0c0518090916171a191e17b8ffc0b40b0b425517b8ff
c040150b0b065517170021221e0201020018180f0f0e081eb8fffeb40c0c
42551eb8fff2b40b0b42551eb8fff640090c0d42551e260e9c06b8ffe8b4
0f0f025506b8fff6b40d0d025506b8ffe040340c0c025506060d0d065506
5d20247024802403242218020c0c4255180e0b0b4255180a0c0d42551820
0120000100201010025500b8fff6b40f0f025500b8fff6b40d0d025500b8
fffa400b0c0c025500060b0b065500b8fff7b40c0c065500b8fff8400a0d
0d0655005d233ba8182b4e10f42b2b2b2b2b2b2b5d3c4dfd2b2b2b3c105d
f62b2b2b2b19e418ed2b2b2b003f3c103c103c3f3cfd3c12392f2b2bfd3c
103c392f12173901111739870e2e2b057d10c43130015d2b2b2b2b2b2b2b
2b2b2b2b2b2b002b2b2b5d435c58400a08400f390f103a11123a2b2b2b59
0171435c58b9000effde401a193911221939122219390e401c3910221439
10221f39102215392b2b2b2b2b2b2b593311213216161514060716171617
1323032e02272623231111213236363534262321a1028ac4cc7acad34d28
554cfff4c2556e572d214be101a185964e97a3fe3005ba4fc8799cd61d25
244e75fe710131848c380b07fd750333377947688600>OXVQMX+ArialMT AddT42Char 
2 6730 54 <0001005cffe704eb05d3003002c5b90027fff8b40d0d425526b8fff8b40d
0d425525b8fff840170d0d425518100c0c425519100c0c42551a100c0c42
550db8ffe8b40b0b42550cb8ffe8b40b0b42550bb8ffe8b40b0b42551cb8
ffe8b40b0b42551bb8ffe8403d0b0b425503180b0b425502180b0b425501
180b0b425563036304730374040425273503391c430349074c1d451f4424
4627530359075c1d572889130e23b8fff2b41010025524b8fff2b4101002
5525b8fff2b41010025526b8fff2b41010025527b8fff2b41010025523b8
fff6b40d10025524b8fff6b40d10025525b8fff6b40d10025526b8fff6b4
0d10025527b8fff640460d100255280d26240224032725360f3423442545
2f5a20562355256c0b6a0d6b0e66146518790b7a0d7a0f7d107524732586
038a0b890d8a0f8d1085248325920d960f96151eb10602435458402d2126
121b261a09262901260000291a120432312600650002000d2d791b891b02
1b25160d2d1e27250125051605b8fff4400c0c0c0655051e2d091e1e1603
003fed3fed2b1112395d1112391112395d1112395d01111217392fed2fed
2fed2fed1b402d25240e0d0b05211c1d1e1b08070604030206012524220e
0d0b06051e1b2d1a400c0c02558f1a011aed16002d01b8ffc040120c0c02
551001200150016001700190010601b801b0400e2d1e1e1603051e2d091b
261a4a09b8fff4b40c0c425509b8fff2b40b0b425509b8fff8400a0d0d42
55092600290129b8ffeab40e0e025529b8fff4401f0c0c0255291a32210c
0c0c4255210e0b0b425521080d0d4255212612012612b8ffecb40e0e0255
12b8fff6b40d0d025512b8fff8400f0c0c02551254200001001931635b18
2b4e10f45d4de42b2b2bed10ed2b2b2b4e10f62b2b5d4ded2b2b2bf4ed00
3fed3fed10fd5d2be410fd5d2bf411121739111739111239390112173959
3130005d712b2b2b2b2b2b2b2b2b2b015d712b2b2b2b2b2b2b2b2b2b2b00
2b2b2b13371e023332363635342627262427262635343636333216161707
2626232206151417160417161615140606232224265cb70d5fc87d6faa53
505c3bfe6c5169677ef294a3f98605ba0fada9b0a1393801d958807a86fb
9dc7fef39901d7106e8d5742734445672317612b37a3656fc16469cc810e
8b8e815b4f33336b283bb57675cf7374e900>OXVQMX+ArialMT AddT42Char 
2 8582 68 <0002004affe8041c043e0028003702a8402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe0404f0c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030eb8fffa
400b0b0b42550e0c0f0f02550eb8ffeab4101002550eb8fff44021101006
550e0c0d0d06550e060f0f06550e260d0d42550e180c0c42550e0e1c0317
b802aa400d182c0b0b42551895141c1c0700b8fff440110c0c0655004527
0a321c030b2961106100b8fff6b40b0b425500b8fff8b40c0c425500b8ff
fc400e0d0d425500060d0d025500252124b8ffecb41010025524b8ffec40
0b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b065524
b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b8025b400e
27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b40e0e02
5526b8fff4b60d0d4255263139b8ffc0400d1e23343039c03902a0390139
17b8fff4406b1010065517080c0c4255172518222f080d0d42552f0c0c0c
42552f0e0b0b42552f24bf06cf06021f063f060206140b0b425506140d0d
425506080c0c4255060e0f0f0255060c0d0d025506180c0c0255060c0b0b
0255060c0b0b0655060e0d0d065506100c0c065506313810f62b2b2b2b2b
2b2b2b2b2b5d71ed2b2b2bf4ed2b2b105d712bf62b2b2b5dedf42b2b2b2b
2b2b2b2b3cfd2b2b2b2be5e5003fed3fe42b3fedfd2be41112392f2b2b2b
2b2b2b2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01
715d2b2b0071250606232226353436363736373637363534272623220607
273e02333216161716151514161723260306070e02151416333236373635
033c64b96aafbc477348356bda67013345887f791db0186ed08988aa5010
091722bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24
250a6e2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d2f48
605b4f3d7700>OXVQMX+ArialMT AddT42Char 
2 9980 70 <00010050ffe803ed043e001a01f3b90017fff040220c0c42550a080c0c42
5509080c0c42550f080c0c425510080c0c425511080c0c4255b102024354
5840340e7f0f010f0b01400050007000030004121c0b07181c040b010e15
07080e0e0255070c0d0d0255070c0c0c025507100b0b0255072f2b2b2b2b
cdd4c6003fed3fed10c45d3210c45d3231301b4047090c011f1c43134317
53135317601360179b029b039a0da410a41a0c080d190a6a0269036a0575
0c700d800da60cb509b60ab50c0c160c860ce302030e225f0f6f0f7f0f03
0f01b802aa4026300040005000600070009000a000e000f00009000f0f0b
000004121c0b07181c040b1c0f010fb8fff4b40c0c42550fb8fff240120b
0b42550f240e080d0d06550e221b000100b8fff4b40c0c425500b8ffee40
810b0b425500240b2b1f010100010101400e2b425501400d0d425501400c
0c425501360b0b425501400b0b065501401010065501480c0c0655011a0d
0d065501491c15080d0d4255150c0c0c4255150e0b0b42551524cf07011f
073f0702070e0b0b0655070a1010065507120c0c0655070c0d0d4255070c
0c0c425507311b34c4182b10f62b2b2b2b2b5d71ed2b2b2b10f62b2b2b2b
2b2b2b2b5d724b53234b515a58b90001ffc03859ed2b2b72f42bed2b2b72
003fed3fed12392f11392f105de4105de43130005d71015d7159012b2b2b
2b2b2b011706062322001134123633321617072626232206151416333236
033cb11defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf
011d010aac010281afa11b6b6cc3d3d6c282>OXVQMX+ArialMT AddT42Char 
2 11110 72 <0002004bffe8041e043e0015001d019e40171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc0400e101006551001010195131c040b17b8fff0b40c0c425517b8ff
f2b40b0b425517b8fff8b60d0d425517400db8ffdcb40d0d02550db8ffee
b40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d1a1fb8
ffc0b32526341fb8ffc0b71e2334301f011f16b8fffc405c0d0d42551633
10080c0c4255100e0b0b425510080d0d425510240740242a341f073f074f
0703070c0c0c4255070c0d0d425507200b0b025507180c0c0255071c0d0d
0255070e0b0b0655071c0c0c065507160d0d065507191e3437182b4e10f4
2b2b2b2b2b2b2b2b5d2b4dfd2b2b2be42b4e10712b2bf6712b2b2b2b4ded
2b2b2b003fedfd5d2b2be43fed12392f5d3cfd713c011112393912393130
015d005d2b2b2b0171720117060623220011100033320011140721161633
32360121262726232206035eba2ceeb9e9feef0114dcd5010e01fce80ab2
85638cfdda02510c3856897ca9015617a3b4011f0103010c0128fedefef9
1020afba680195864368a600>OXVQMX+ArialMT AddT42Char 
2 11632 73 <000100130000028005d300170129401e1409010f192f193019401970199b
0c9c0da90d081a0d280db019c0190419b8ffc040401a1f341d080d030c0f
1c0a0115022b1413040306000a9f140114ff130e0b0b4255134004170e0b
0b425517080d0d4255170c0c0c425517250400030292010100b8ffc0b331
383400b8ffc0402b1c1f3490000119400f0f025519400d0e025500141010
025500280f0f025500220e0e0255002c0d0d025500b8fff2400b0c0c0255
00140b0b065500b8ffeab41010065500b8ffe6b40f0f065500b8fffab70c
0c065500a31819bc01ba002100f6010a00182b2bf62b2b2b2b2b2b2b2b2b
2b2b5d2b2b3c10f43c103ced2b2b2b10ed2bed5d003f3f3c3c3cfd3c3fed
391139313043794014101106090706080602061009121b0011060f1b012b
012b2a8181012b715d007233112335333534373636333217072623220615
1533152311b29f9f131a83764c5c1b38325244cfcf039a8c716b34465712
9d0a4660628cfc66>OXVQMX+ArialMT AddT42Char 
2 12000 74 <00020042fe5103ea043e001e002a01c540600b0b05142c0b25144c0b4514
06091d191d2c0b26142c23390b36144a0b46145607580b680bfa0af5150e
2e232c273e233e274c27902ca02c07362136293f2c460b46214529542154
29690763216329602c802cda27e821ee23ef271117160615b802b1b4281c
130701b802aa401020003000600070008000c000d0000700b8027d401005
1c1c0f0a45221c0c0a16153325330ab8fff2b40b0b42550ab8fff2b40c0c
42550ab8fff840270d0d42550a251818d017011017401760178017042c40
0b0c02552c400d0d025517121010025517b8fff440110f0f025517060e0e
025517160d0d025517b8ffea400b0b0b065517121010065517b8ffeeb40c
0c065517b8fffcb40d0d065517b8fffab40c0c425517b8fffa40680d0d42
5517740f012500221f0e0b0b42551f080d0d42551f0c0c0c42551f24bf0f
cf0fdf0fff0f041f0f3f0f4f0f030f0c0c0c42550f100d0d42550f200b0b
02550f1a0c0c02550f220d0d02550f1c0b0b06550f0c0d0d06550f1a0c0c
06550f192b2c74213450182b2b4ef42b2b2b2b2b2b2b2b5d714ded2b2b2b
f4ed10fd2b2b2b2b2b2b2b2b2b2b2b2b5d713c10fd2b2b2be4f63c003fed
e43fedfd5de43fede43f3c3130015d71005d711717161716333236373627
062322023534123633321735331114060623222613141633323635342623
220666af0b3243747d88180e0176b0dbf06ed18dbc7aa665dba0beea99a6
7d7ca8ad7a78a8581a512532645a37b08b013cdd9801018c9880fc6af8cf
78ab032ad1c0bfccc3c6c300>OXVQMX+ArialMT AddT42Char 
2 12582 76 <000200880000013c05ba0003000701a74019020a0b0b4255030a0b0b4255
060a0b0b4255070a0b0b425501b8fffcb40b0b425500b8fffcb40b0b4255
05b8fffcb40b0b425504b8fffc401d0b0b4255020b0c0c4255030b0c0c42
55060b0c0c4255070b0c0c425501b8fffdb40c0c425500b8fffdb40c0c42
5505b8fffdb40c0c425504b8fffd401d0c0c425502040d0d425503040d0d
425506040d0d425507040d0d425501b8fffcb40d0d425500b8fffcb40d0d
425505b8fffcb40d0d425504b8fffc403a0d0d425509360b0b02554f0990
09a009b009c009df09f0090700091f09700980099f09b009c009df09e009
ff090a1f0901000107040203090603b8ffc0402d0d0d4255037e01000605
06040a0607250500049f04a004b004c004e00406c004f0040200042004d0
04e0040404b8fff8b41010025504b8fffa40170e0e025504040c0c025504
0a0b0b025504140b0b065504b8ffeab41010065504b8fffeb40d0d065504
b8fffc400a0c0c0655044e084750182b10f62b2b2b2b2b2b2b2b5d71723c
fd3c003f3f3c3fed2b0111123939111239393130015d72712b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b133533150311331188b4b4
b404ebcfcffb150426fbda00>OXVQMX+ArialMT AddT42Char 
2 13044 79 <000100830000013705ba0003014d400d020a0b0b4255030a0b0b425501b8
fffcb40b0b425500b8fffc40110b0b4255020b0c0c4255030b0c0c425501
b8fffdb40c0c425500b8fffd40110c0c425502040d0d425503040d0d4255
01b8fffcb40d0d425500b8fffc400b0d0d425505360b0b025505b8ffc0b3
37383405b8ffc0b334353405b8ffc0b330313405b8ffc0b322253405b8ff
c040251517340f051f059f05df05044f05df05f005031f0570058005ff05
040100000a0203250100b8ffc0b337383400b8ffc040153335349f0001c0
00f0000200002000d000e0000400b8fff8b41010025500b8fffa401d0e0e
025500040c0c0255000a0b0b025500140b0b065500081010065500b8fffe
b40d0d065500b8ffffb40c0c065500b8fffc400a0c0c0655004e04475018
2b10f62b2b2b2b2b2b2b2b2b5d71722b2b3cfd3c003f3f3130015d71722b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b3311331183b405bafa4600>OXVQMX+ArialMT AddT42Char 
2 14244 81 <00010087000003e6043e001601b140130503061302a810b810e303e713f0
03f6130604b8fff040220b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0eb8fff8b40d0d42550eb8fff2b40b0b42
550eb8fff4401f0c0c42550e2418401010025518400b0b02550b28101002
550b140e0e02550bb8ffec40110d0d02550b040c0c02550b220b0b02550b
b8fff4400b0b0b06550b14101006550bb8fff9400b0d0d06550b0a0f0f06
550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0402c
343634b018f018027018a018b018c01804180302331516080d0d4255160e
0b0b4255160c0c0c425516250100b8fff6b41111025500b8fffab4101002
5500b8fffa40170e0e025500040c0c0255000a0b0b025500040b0b065500
b8fffa40110f0f065500020c0c065500040d0d065500b8ffc04012333634
f0000100002000d000e00004004e1710f65d712b2b2b2b2b2b2b2b2b2b3c
fd2b2b2b3cf43c105d712bf65d712b2b2b2b2b2b2b2b2b2b2b2b2bed2b2b
2b3c103c003f3c3f3fed11390112393130437940160611090a080a070a03
06102611060e1b010f0a121b01002b012b2b2a81015d71002b5d71331133
153633321616171615112311342626232206151187a275dd60a150100ab4
2a6b4873a7042697af45704d327dfd7302866e6d4192ccfdbc00>OXVQMX+ArialMT AddT42Char 
2 14750 82 <00020044ffe80427043e000d001901bfb615180d0d065513b8ffe8b40d0d
06550fb8ffe840650d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14b8fff2b40b0b425514b8ff
f4b40c0c425514b8fff840130d0d425514241b400d0d02551b400b0b0255
07b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b0b06
5507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c065507b8
ffc0400e2425343007010007100720070307b8fff4400a0d0d42550731df
1b011bb8ffc0406d1e2334301b011b0e080d0d42550e0c0c0c42550e0e0b
0b42550e24000c0e0f025500120d0d0255000c0c0c0255001c0b0b025500
0e0b0b0655000e0d0d0655000c1010065500160c0c065500402425341f00
3f0002000c0d0d4255000c0c0c4255000c0b0b425500311a3437182b10f6
2b2b2b5d2b2b2b2b2b2b2b2b2bed2b2b2b10712b5df62b5d5d2b2b2b2b2b
2b2b2b2b2bed2b2b2b003fed3fed313001715d0071435c58400953055309
6205620904015d59002b2b2b2b1310373633320015140606232200131416
33323635342623220644a489c5db01167beb8bdffeedb9b28786b2b38587
b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca>OXVQMX+ArialMT AddT42Char 
2 15284 83 <00020087fe690421043e0012001e019640740c102d103d104b10043f20b0
20021f20290c231d3215321d421d70209020083a173a1b4a174a1b59085b
0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee414e41ee0
20ff201623042b102b1535043a1046044a105a10e50beb1dfe100b110e03
161c1c06070106161c0e0b000e19b8fff2b40b0b425519b8fff4b40c0c42
5519b8fff8401f0d0d42551924d00a01100a400a600a800a0420400b0b02
5520400d0d02550ab8ffe6400b0f0f02550a180d0d02550ab8fffab40c0c
02550ab8ffeeb40b0b06550ab8fff4b40f0f06550ab8ffe840350c0c0655
0a74011333023312080d0d4255120e0b0b4255120c0c0c425512250000c0
01019001a001b001f001041f013f014f010301b8fffc401d0e0e02550110
0d0d025501100c0c025501100b0b0255010c0b0b065501b8fff6b4101006
5501b8fffc40160f0f0655010c0c0c065501120d0d065501191f47371801
2b4e10f42b2b2b2b2b2b2b2b2b5d71723c4d10fd2b2b2bf4e410fd2b2b2b
2b2b2b2b2b5d71ed2b2b2b003f3fed3f3fed113912393130005d015d7172
007113113315363633321616151402062322262711031416333236353426
23220687a43a926888d06a75df7b5a8f2e11a67678aba77473b1fe6905bd
8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbcad700>OXVQMX+ArialMT AddT42Char 
3 0 85 <00010085000002c6043e001100de404d2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
9008010822201301130222110e0b0b425511080d0d4255110c0c0c425511
250100b8ffc04010333634f0000100002000d000e0000400b8fff8b41010
025500b8fff840110e0e025500040c0c025500060b0b025500b8fffcb410
10065500b8fff440160f0f065500060c0c065500080d0d0655004e1247c4
182b10f62b2b2b2b2b2b2b2b5d712b3cfd2b2b2be4105df472e4003f3f3f
ed11393911393901111239390010c9870e7dc43130005d72015d33113315
363633321707262322060706151185a23e693f5b5e3e42423b5e141e0426
a171483aa727473f6072fdd4>OXVQMX+ArialMT AddT42Char 
3 282 86 <0001003fffe803b1043e003003b14013170e0b0b4255180e0b0b4255190e
0b0b425528b8fff4b40c0c425527b8fff4b40c0c425526b8fff4b40c0c42
5525b8fff4b40c0c425524b8fff4b40c0c425523b8fff4b40c0c425522b8
fff4b40c0c425521b8fff4b40c0c425520b8fff4407f0c0c425504221422
3a094a094424562265227c098e098424a613ab2cc2030d09171a1817304b
2cd617051b025502021032010a185c085c095c0a5c0b5c0c5c0d6a086a09
6a0a6a0b6a0c6a0db426b4270f27262427242936245a0a590b6426642874
2374248024930a9c0c9228972c9530a40aa90ca327a428b326c5261628b8
fff4b40d0d065522b8fff4b40d0d065523b8fff4b40d0d065524b8fff4b4
0d0d065528b8fff4b40c0c065522b8fff4b40c0c065523b8fff4b40c0c06
5524b8fff4b40c0c06551db8ffde40121e395a0827250c0a041a20261504
0b2e1d1ab802aa4022192c0b0b02551f193f194f195f19af19cf19060f19
1f196f19df19041f198f190219bd02550015000002aa0001ffc040140b0b
025510014001021001d00102000110010201b8ffc0b314163401b8ffc040
100e113401012e5c1d6c1d021d1c150704b8fff4b40b0b025504b8ffe6b4
1010065504b8ffe640130f0f0655041c2e0b1f1a011a24194013183432b8
ffc040350f0f025519180f0f025519180d0d025519160c0c025519201010
065519200f0f065519100c0c065519160d0d065519160c0c425519ba025b
0007fff2b60b0b425507242ab8ffc0b51c39d02a012ab8ffe6b40c0c0255
2ab8ffe8b40f0f02552ab8ffe8b40c0c06552ab8ffeab40d0d06552ab8ff
f4b60c0c42552a1a32b8ffc04021272a346032c032023f32803202321001
01012400180d0d025500100d0d06550020b8fff4b40d0d025520b8fff4b4
1010065520b8fff4401f0f0f0655200e0b0b425520240f100b0b02550f16
0c0c02550f200d0d02550fb8fffa40260f0f02550f0e0c0c06550f0c0d0d
06550f060c0c42550f22df00013f004f00020019313437182b4e10f45d71
4df42b2b2b2b2b2b2bed2b2b2b2b102b2bed724e105d712bf62b2b2b2b2b
712b4ded2bf42b2b2b2b2b2b2b2b2b2bed72003fed2b2b2b3fed7112392f
2b2b5d71722be410fd5d71722be411123911123901111217393130437940
40272d1e2305142c261110121013100306220d201b000928071b01052d07
1b011e14201b00210e231b0022230d0c08290a1b012827090a062b041b00
1f101d1b01002b2b103c103c2b103c103c2b012b2b2b2b2a2b818181002b
2b2b2b2b2b2b2b2b5d71015d72715d002b2b2b2b2b2b2b2b2b012b2b2b13
37161633323635342726272e023534363736363332161617072626232206
151417161716171e02151406062322263fb20f897b7c78352593c6994f41
382a91537dbd5a11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c
6b7265443d2318253249814e4779281f2b487b6718525c5237231c1d130a
2433417c5c5a9f57ac00>OXVQMX+ArialMT AddT42Char 
3 1372 87 <00010024fff2022a05990017011fb9000cfffeb40c0c42550bb8fffeb40c
0c425508b8fffeb40c0c425507b8fffeb40c0c425506b8fffeb40c0c4255
0ab8ffc0b323263409b8ffc0405323263480190100010c0d0a0103001610
092b0f0a06161c030b0f10220022010d12080d0d4255120e0b0b4255120a
0c0c425512250c01ff070845094560077007800790070400072007a007b0
07c007d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e
0e025507b8fff8b40d0d025507b8fff8b40c0c025507b8fffab410100655
07b8fff0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00
180136b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd2b2b2b3c
10e4f43c003fed3f3cfd3c1139123911333310c93130015d2b2b2b2b2b2b
2b25170623222626351123353311371133152311141616333202101a4c3c
626c2c8484b3b5b5132b281ea19f103e65a202638c01076cfe8d8cfd934d
2c1a>OXVQMX+ArialMT AddT42Char 
3 1734 88 <00010083ffe803e0042600180183b9001affc0400915173402201316340f
b8fff040191214342b1301240813160c0113160b06000a111c030b003316
b8fff8b40d0d425516b8fff2b40b0b425516b8fff4401f0c0c4255162518
17403336341a401010025517281010025517120e0e025517b8ffec400b0d
0d025517040c0c025517b8fff4400b0b0b065517141010065517b8fff840
0b0d0d0655170c0f0f065517b8fff6400d0c0c0655ff1701c01701174e1a
b8ffc04027343634b01af01a02701aa01ab01aff1a041a0c080d0d42550c
0e0b0b42550c0c0c0c42550c2509b8ffc04010333634f0090100092009d0
09e0090409b8fff8b41010025509b8fff840110e0e025509040c0c025509
0a0b0b065509b8fff640160f0f065509020c0c065509020d0d0655094e19
4750182b10f62b2b2b2b2b2b2b5d712bed2b2b2b105d712bf65d712b2b2b
2b2b2b2b2b2b2b2b3cfd2b2b2be4003fed3f3f3c39390111123931304379
401a04100e0d0f0d0206070806080508030610040c1b000d08111b00002b
012b2a2a81005d012b2b2b21350623222626272635113311141716163332
363635113311033f7cd55ea34f100bb40b116e51518e3bb49cb4486d4f35
730292fdb38d314751538f880239fbda>OXVQMX+ArialMT AddT42Char 
OXVQMX+ArialMT /CharStrings get begin
/space 3 def
/parenleft 11 def
/parenright 12 def
/hyphen 16 def
/four 23 def
/I 44 def
/N 49 def
/R 53 def
/S 54 def
/a 68 def
/c 70 def
/e 72 def
/f 73 def
/g 74 def
/i 76 def
/l 79 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
end
OXVQMX+ArialMT /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 52 /four put
dup 73 /I put
dup 78 /N put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CLCRMY+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three /four 20{/.notdef}rp /I 4{/.notdef}rp /N 3{/.notdef}rp /R /S 13{/.notdef}rp /a /.notdef /c /.notdef /e /f /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]CLCRMY+ArialMT nfCLCRMY+ArialMT*1 [10 0 0 -10 0 0 ]msf364.176 285.178 mo(10)[5.56 0 ]xshCLCRMY+ArialMT*1 [6.6667 0 0 -6.6667 0 0 ]msf374.728 279.591 mo(4)shCLCRMY+ArialMT*1 [12 0 0 -12 0 0 ]msf87.6582 298.833 mo(Signal to Interference-plus-Noise Ratio \(SINR\))[8.00409 2.664 6.672 6.672 6.672 2.664 3.336 3.336 6.672 3.336 3.336 6.672 3.336 6.672 3.99591 3.336 6.672 3.99591 6.672 6.672 6 6.672 3.99591 6.672 2.664 6.672 6 3.99591 8.664 6.672 2.664 6 6.672 3.336 8.664 6.672 3.336 2.664 6.672 3.336 3.99591 8.00409 3.336 8.664 8.664 0 ]xsh82.3813 18.5646 mo
82.3813 16.7026 li
@
101.623 18.5646 mo
101.623 16.7026 li
@
114.658 18.5646 mo
114.658 16.7026 li
@
125.21 18.5646 mo
125.21 16.7026 li
@
133.899 18.5646 mo
133.899 16.7026 li
@
140.727 18.5646 mo
140.727 16.7026 li
@
146.934 18.5646 mo
146.934 16.7026 li
@
152.52 18.5646 mo
152.52 16.7026 li
@
157.485 18.5646 mo
157.485 16.7026 li
@
157.485 20.4269 mo
157.485 16.7019 li
@
189.761 18.5646 mo
189.761 16.7026 li
@
208.383 18.5646 mo
208.383 16.7026 li
@
222.037 18.5646 mo
222.037 16.7026 li
@
231.969 18.5646 mo
231.969 16.7026 li
@
240.658 18.5646 mo
240.658 16.7026 li
@
247.485 18.5646 mo
247.485 16.7026 li
@
253.692 18.5646 mo
253.692 16.7026 li
@
259.278 18.5646 mo
259.278 16.7026 li
@
264.244 18.5646 mo
264.244 16.7026 li
@
264.244 20.4269 mo
264.244 16.7019 li
@
296.521 18.5646 mo
296.521 16.7026 li
@
315.141 18.5646 mo
315.141 16.7026 li
@
328.796 18.5646 mo
328.796 16.7026 li
@
339.348 18.5646 mo
339.348 16.7026 li
@
347.416 18.5646 mo
347.416 16.7026 li
@
354.865 18.5646 mo
354.865 16.7026 li
@
361.071 18.5646 mo
361.071 16.7026 li
@
50.7266 16.7023 mo
374.067 16.7023 li
@
82.3813 18.5646 mo
82.3813 16.7026 li
@
101.623 18.5646 mo
101.623 16.7026 li
@
114.658 18.5646 mo
114.658 16.7026 li
@
125.21 18.5646 mo
125.21 16.7026 li
@
133.899 18.5646 mo
133.899 16.7026 li
@
140.727 18.5646 mo
140.727 16.7026 li
@
146.934 18.5646 mo
146.934 16.7026 li
@
152.52 18.5646 mo
152.52 16.7026 li
@
157.485 18.5646 mo
157.485 16.7026 li
@
157.485 20.4269 mo
157.485 16.7019 li
@
189.761 18.5646 mo
189.761 16.7026 li
@
208.383 18.5646 mo
208.383 16.7026 li
@
222.037 18.5646 mo
222.037 16.7026 li
@
231.969 18.5646 mo
231.969 16.7026 li
@
240.658 18.5646 mo
240.658 16.7026 li
@
247.485 18.5646 mo
247.485 16.7026 li
@
253.692 18.5646 mo
253.692 16.7026 li
@
259.278 18.5646 mo
259.278 16.7026 li
@
264.244 18.5646 mo
264.244 16.7026 li
@
264.244 20.4269 mo
264.244 16.7019 li
@
296.521 18.5646 mo
296.521 16.7026 li
@
315.141 18.5646 mo
315.141 16.7026 li
@
328.796 18.5646 mo
328.796 16.7026 li
@
339.348 18.5646 mo
339.348 16.7026 li
@
347.416 18.5646 mo
347.416 16.7026 li
@
354.865 18.5646 mo
354.865 16.7026 li
@
361.071 18.5646 mo
361.071 16.7026 li
@
374.106 271.798 mo
374.106 269.936 li
@
374.106 271.798 mo
374.106 268.073 li
@
374.106 20.4191 mo
372.244 20.4191 li
/1 
[/DeviceCMYK] /CSA add_res
3.0518e-05 .993988 1 3.0518e-05 cmyk
@
374.106 271.798 mo
374.106 16.6945 li
@
374.106 245.729 mo
372.244 245.729 li
@
374.106 230.833 mo
372.244 230.833 li
@
374.106 220.281 mo
372.244 220.281 li
@
374.106 212.212 mo
372.244 212.212 li
@
374.106 205.385 mo
372.244 205.385 li
@
374.106 199.798 mo
372.244 199.798 li
@
374.106 194.833 mo
372.244 194.833 li
@
374.106 190.488 mo
372.244 190.488 li
@
374.106 186.764 mo
372.244 186.764 li
@
374.106 186.764 mo
370.382 186.764 li
@
374.106 160.695 mo
372.244 160.695 li
@
374.106 145.798 mo
372.244 145.798 li
@
374.106 135.247 mo
372.244 135.247 li
@
374.106 127.178 mo
372.244 127.178 li
@
374.106 120.35 mo
372.244 120.35 li
@
374.106 114.764 mo
372.244 114.764 li
@
374.106 109.798 mo
372.244 109.798 li
@
374.106 105.454 mo
372.244 105.454 li
@
374.106 101.729 mo
372.244 101.729 li
@
374.106 101.729 mo
370.382 101.729 li
@
374.106 75.6608 mo
372.244 75.6608 li
@
374.106 60.7638 mo
372.244 60.7638 li
@
374.106 50.2121 mo
372.244 50.2121 li
@
374.106 42.1432 mo
372.244 42.1432 li
@
374.106 35.3161 mo
372.244 35.3161 li
@
374.106 29.7291 mo
372.244 29.7291 li
@
374.106 24.7638 mo
372.244 24.7638 li
@
%ADOBeginSubsetFont: OXVQMX+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OXVQMX+ArialMT gcheck setglobal} if
2 3606 26 <000100610000041605a7000d0070400ec40d01040d010402080409030d00
b802bb4030020104090c0d73030302402123344f025f026f0203021a0f08
7309eb004f015f015f02033f015f016f017f010401190eb80192b18b182b
4e10f45d713c4df4ed4e10f6712b3c4d10ed003f3f3cfd3c391139011112
39313001715d13352115060003060723361212376103b58cfeed4b360fb9
0382f38904faad8c95fe12fefbb8dbad01ea01c79c00>OXVQMX+ArialMT AddT42Char 
2 4158 40 <000100a2000004e805ba000b00b4401506051e080807070003041e020102
0a091e0b000807b8ffc0402f1012340754034a200a200d020a1a0d040902
0c0c4255090e0b0b4255090a0c0d425509200120000100201010025500b8
fff6b40f0f025500b8fff6b40d0d025500b8fffab40c0c025500b8fffab4
0909025500b8fffab40c0c065500b8fff0400a0d0d0655005d0c3b5b182b
4e10f42b2b2b2b2b2b2b5d3c4dfd2b2b2b3c4e10f65d4df4e42b003f3cfd
3c3f3cfd3c12392f3c10fd3c3130331121152111211521112115a20424fc
9e032bfcd5038405baadfe3facfe0dad>OXVQMX+ArialMT AddT42Char 
2 7588 55 <00010030000004ba05ba000700de401906020c0c425507020c0c42550607
0b0b425507070b0b425501b8fff9b40b0b425500b8fff940110b0b425506
050c0d425507050c0d425501b8fffbb40c0d425500b8fffb40110c0d4255
05021e04030200080706050409b80273b320040104b80101b7062001022f
030103b80101b5010120000100b8ffe8400b1010025500080f0f025500b8
fff2b40c0c025500b8ffe2b40d0d025500b8fffcb40c0c065500b8fffeb4
0d0d065500b80273b308b699182b10f62b2b2b2b2b2b5d3c10f45d3c10fd
e45de6103c103c003f3f3cfd3c3130012b2b2b2b2b2b2b2b2b2b21112135
211521110213fe1d048afe1b050dadadfaf3>OXVQMX+ArialMT AddT42Char 
2 9428 69 <00020086ffe8041f05ba0010001d01c9407b01050c0f240535054505053f
1fb01f021f1f221c331c421c701f901f063a133c163c1a4c164c1a5d085d
0d580f5d165e1a6a086c0d680f6e166e1ac01fd90cda17da19e213ec17ec
19e31de01fff1f1920052f0f2f1430053f0f40054c0f50056605da1df504
fa100c10150e040602001b1c0607010a151c0e0b18b8fff8b40d0d425518
b8fff4b40c0c425518b8fff240250b0b42551824d00b01100b400b600b80
0b041f400d0d02550b0c0f0f02550b180d0d02550bb8fff6b40c0c02550b
b8fff0b40b0b06550bb8fff4b40f0f06550bb8ffe0b40c0c06550bb8fff4
40530d0d06550b740111020d0d425511080c0c4255113300120b0b425500
040d0d425500040c0c025500040d0d06550033030c0c0c425503080d0d42
5503250202c001019001a001b001f001041f013f014f010301b8fffeb410
10025501b8fffc401d0e0e0255010c0d0d025501100c0c025501120b0b02
55010c0b0b065501b8fff8b41010065501b8fffc40160f0f065501180c0c
065501140d0d065501191e4737182b4e10f42b2b2b2b2b2b2b2b2b2b5d71
723c4d10fd2b2bf42b2b2b2be42b2b10fd2b2b2b2b2b2b2b2b5d71ed2b2b
2b003fed3f3fed3f11391112393130005d015d7172007121231133113633
321e0215100023222703141716333236353426232206012da7b472b162af
7140fef2bdbc6b0234559176aca57576ac05bafdf58f4f8fca73feeffed6
9d0196bf558bcdcbd0c6cd00>OXVQMX+ArialMT AddT42Char 
2 10568 71 <00020046ffe803df05ba0011001d01bf407c0a02040d250d340d440d0535
14351c5702540a5214531c6702640565096314601cc01fd405d513dd19e5
13e514ef17eb19e51de01fff1f161f1f2b1a3c163c1a4b1a701f901f072e
02240d2e163a02350d4b02450d4614491c570a560d670de506e716fa01f4
0e100115030e0b100f001b1c0b0711000a151c030b18b8fff8b40d0d4255
18b8fff8b70c0c425518330100b8fff2b70b0b42550025110fb8fff8b40d
0d42550fb8fff4b40c0c42550fb8fff240270b0b42550f251010d0110110
11401160118011041f400b0b02551f400d0d025511121010025511b8fff4
40110f0f025511060e0e025511180d0d025511b8fff2400b0b0b0655110e
1010065511b8ffeeb40c0c065511b8fff8b40d0d065511b8fff840600c0c
4255117412080d0d4255120c0c0c4255120e0b0b4255122407100c0c4255
07100d0d4255bf07cf07df07ff07041f073f074f0703071e0b0b02550718
0c0c0255071e0d0d0255070c0b0b0655070c0d0d0655071a0c0c06550719
1e3450182b4e10f42b2b2b2b2b2b5d712b2b4ded2b2b2bfd2b2b2b2b2b2b
2b2b2b2b2b5d713c10ed2b2b2b10fd2b3ce42b2b003fed3f3c3fed3f3c11
391112393130005d01715d00712135062322262635341236333216171133
11011416333236353426232206033865c47fd5756ad48360962fb3fd20ac
7576a5a87b78a1869e8cfba39f01038a5141020efa460212cccac1c6dacc
c400>OXVQMX+ArialMT AddT42Char 
2 13402 80 <0001008700000626043e002302e2b90013fff2b40b0b425510b8fff2b40b
0b425512b8fff2b40b0b425511b8fff2b40b0b42551db8fffcb40d0d4255
1cb8fffcb40d0d42551bb8fffcb40d0d42551ab8fffcb40d0d42551db8ff
fcb40c0c42551cb8fffcb40c0c42551bb8fffcb40c0c42551ab8fffcb40c
0c42550cb8fffeb40c0c42550db8fffeb40c0c42550eb8fffeb40c0c4255
0fb8fffeb40c0c425513b8fff2b40c0c425510b8fff2b40c0c425512b8ff
f2b40c0c425511b8fff2b40c0c425513b8fff8b40d0d425510b8fff8b40d
0d425512b8fff8b40d0d425511b8fff8b40d0d42550db8fff4b40d0d0655
08b8fff4b40d0d065509b8ffd8404d0b0d342504e404e409e117e52005d5
05f620021708202309181b20090303231e1c06151c0b0b06070106231a19
100ad025019025a025022517171a0e2590110111041010025511180f0f02
5511b8ffec400b0e0e025511140c0c025511b8ffe840170b0b025511020b
0b0655110c1010065511060f0f065511b8fffab40c0c065511b8fff8b40d
0d065511b8015d401e18080c0c4255180e0b0b425518040d0d4255182590
1b011b180f0f02551bb8ffec400b0e0e02551b140c0c02551bb8ffee4011
0b0b02551b040b0b06551b0a101006551bb8fffe400b0d0d06551b0c0f0f
06551bb8fffcb40c0c06551bb8015d4028000233230e0b0b425523080d0d
4255230c0c0c4255232501d000019000a000021f003f004f000300b8fffe
401d0e0e025500100d0d025500100c0c0255000c0b0b025500160b0b0655
00b8fffcb41010065500b8fff440140f0f0655000a0c0c0655000e0d0d06
5500192425b80178b3214750182b2b4ef42b2b2b2b2b2b2b2b2b5d71723c
4dfd2b2b2be410f42b2b2b2b2b2b2b2b2b5ded2b2b2bf42b2b2b2b2b2b2b
2b2b2b5dfd4e456544e67172003f3c3c3c3f3f3c4d10ed10ed1117390111
1239123931304379400e0c141326140c111b01120d151b01002b012b2b81
015d005d2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b33113315363633321617363332161511231134262623220615112311
342623220606151187a132a66a76971f7eca9eaab3235c3e7094b458644c
813a0426954e5f6258baafb6fd27029d6c5f3a95a4fd9702b27878509a91
fdd9>OXVQMX+ArialMT AddT42Char 
OXVQMX+ArialMT /CharStrings get begin
/seven 26 def
/E 40 def
/T 55 def
/b 69 def
/d 71 def
/m 80 def
end
OXVQMX+ArialMT /Encoding get
dup 55 /seven put
dup 69 /E put
dup 84 /T put
dup 98 /b put
dup 100 /d put
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CLCRMY+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three /four 2{/.notdef}rp /seven 13{/.notdef}rp /E 3{/.notdef}rp /I 4{/.notdef}rp /N 3{/.notdef}rp /R /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]CLCRMY+ArialMT nfCLCRMY+ArialMT*1 [6.6667 0 0 -6.6667 0 0 ]msf387.141 269.937 mo(4)sh387.141 14.8358 mo(7)shCLCRMY+ArialMT*1 [10 0 0 -10 0 0 ]msf376.59 275.523 mo(10)[5.56 0 ]xsh376.59 20.4231 mo(10)[5.56 0 ]xshCLCRMY+ArialMT*1 [0 -12 -12 0 0 0 ]msf387.521 217.277 mo(Total Number of Electrodes)[-7.33191 -6.672 -3.336 -6.672 -2.664 -3.336 -8.664 -6.672 -9.99591 -6.672 -6.672 -3.99591 -3.336 -6.672 -3.336 -3.336 -8.00409 -2.664 -6.672 -6 -3.336 -3.99591 -6.672 -6.672 -6.672 0 ]ysh2 lw
52.3643 167.764 mo
58.5713 164.66 li
65.3993 161.557 li
71.6063 158.453 li
78.4333 155.971 li
84.6403 152.868 li
91.4683 150.385 li
97.6753 147.902 li
104.502 146.04 li
110.709 143.557 li
117.537 141.695 li
124.364 139.212 li
130.571 137.35 li
137.399 135.488 li
143.606 133.626 li
150.433 131.764 li
156.641 129.902 li
163.468 128.661 li
169.675 126.799 li
176.502 124.937 li
183.33 123.695 li
189.537 121.833 li
196.364 120.592 li
202.571 119.35 li
209.399 117.488 li
215.606 116.247 li
222.433 115.005 li
228.64 113.764 li
235.468 112.523 li
241.675 111.282 li
248.503 110.04 li
255.33 108.799 li
261.537 107.557 li
268.365 106.937 li
274.571 105.695 li
281.399 104.454 li
287.606 103.212 li
294.433 102.592 li
300.64 101.35 li
307.468 100.109 li
314.296 99.4883 li
320.503 98.2473 li
327.33 97.6263 li
333.537 96.3853 li
340.365 95.7643 li
346.571 94.5233 li
353.399 93.9023 li
359.606 92.6613 li
366.433 92.0403 li
373.26 90.7993 li
.883665 .769161 3.0518e-05 3.0518e-05 cmyk
@
1 lw
397.999 271.798 mo
397.999 16.6945 li
@
397.999 271.798 mo
396.138 271.798 li
@
397.999 271.798 mo
394.275 271.798 li
@
CLCRMY+ArialMT*1 [10 0 0 -10 0 0 ]msf400.482 275.523 mo(10)[5.56 0 ]xshCLCRMY+ArialMT*1 [6.6667 0 0 -6.6667 0 0 ]msf411.034 269.937 mo(1)sh397.999 233.316 mo
396.138 233.316 li
@
397.999 210.35 mo
396.138 210.35 li
@
397.999 194.833 mo
396.138 194.833 li
@
397.999 182.419 mo
396.138 182.419 li
@
397.999 172.488 mo
396.138 172.488 li
@
397.999 163.798 mo
396.138 163.798 li
@
397.999 156.35 mo
396.138 156.35 li
@
397.999 149.523 mo
396.138 149.523 li
@
397.999 143.936 mo
396.138 143.936 li
@
397.999 143.936 mo
394.275 143.936 li
@
397.999 105.454 mo
396.138 105.454 li
@
397.999 83.109 mo
396.138 83.109 li
@
397.999 66.9708 mo
396.138 66.9708 li
@
397.999 54.5568 mo
396.138 54.5568 li
@
397.999 44.6261 mo
396.138 44.6261 li
@
397.999 35.9362 mo
396.138 35.9362 li
@
397.999 28.4879 mo
396.138 28.4879 li
@
397.999 22.2809 mo
396.138 22.2809 li
@
397.999 16.695 mo
396.138 16.695 li
@
397.999 16.695 mo
394.275 16.695 li
@
%ADOBeginSubsetFont: OXVQMX+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OXVQMX+ArialMT gcheck setglobal} if
2 3778 39 <0002009e0000055a05ba000f001d01194012201f0143081c1d1e02010211
101e0f000817b8fffeb40c0c425517b8fff2b40b0b425517b8fff640220c
0d425517262009011f400d0d0255092010100255090a0f0f025509180d0d
025509b8fff440270c0c0655091a1f1d100e0b0b4255100a0d0d4255100c
0c0c425510200120000100201010025500b8fff6b40f0f025500b8fff6b4
0d0d025500b8fffab40c0c025500b8fff7b40c0c065500b8fff8400a0d0d
0655005d1e3b5c182b10f62b2b2b2b2b2b5d3cfd2b2b2b3c10f62b2b2b2b
2b5ded2b2b2b003f3cfd3c3f3cfd3c313043794036031b07080608050804
08040619181a1802060b0a0c0a0d0a030615161416131603061b03172101
120e17210118081c2101160a1121002b2b012b2b2a2a2a2a81015d331121
3217161716121514020e022325213236373636353426272623219e01f9ab
5a7e5974734e7a91cd85feb1013991a531454d976c4eadfecc05ba151d4c
62fecfc4a7fefea96132ad363145e9a6e6f72a1e>OXVQMX+ArialMT AddT42Char 
2 4698 48 <000100980000060f05ba00100317400c082a0b0d4255022a0b0d4255b102
02435458b90008fff6400b0c0c0255080e0d11025502b8ffeeb40d110255
05b8ffee40280d1102550c120c0c0255050f0c030900010208090b0e0008
09020a0b06101002550b100d0d02550bb8fffab60c0c02550b1000b8ffe6
b41010025500b8fff8b40f0f025500b8fffcb40d0d0255002f2b2b2bcd2f
2b2b2bcd003f3fc0c010d0d0c0111217392b2b3130012b2b2b001bb10602
435458401f07200b0b065506200b0b065503200b0b065504200b0b065505
200b0b065508b8fff240230b0b0655020c0b0b065503060c0c0655020e0c
0c0655090c0c0c06550a0c0c0c065507b8fff8b40d0d065508b8fff8401f
0d0d06552605010c200a12340f200a12340f050c0300010e0b0008080102
0ab8ffeeb40b0b06550ab8ffeeb40c0c06550abb0256001200100256400d
000c0b0b065500060c0c065500b8fff8b40d0d065500012f2b2b2bf42ff4
2b2b003f3c3f3c3c111217392b2b5d3130012b2b2b2b2b2b2b2b002b2b2b
2b2b1b407f00020f0814021b0804760c860cc80c03090c490c490f032904
250d2c0e58035b04760d780e870d080b020508390d360e4f024b03440740
084d0d420e0a9802990396079608a803a7070612020f0e0e300502140505
02080c0d0d300508140505080c520f5201400102020808090a0b0b0d0d0e
0e1000080902601280120212ba02a8000d0131b2052008b8013140160c09
0a0a0b0b42550a0a0c0c42550a20400c7f0b010bba0256000e010bb20520
02b8010bb20f0100b8fff6b40b0b425500b8fff6400b0c0c425500200f70
100110b80256b72005600580050305b802a8b3113b59182b1910f45df45d
3c18fd2b2b3c10ed1a1910edf45d3c1a18fd2b2b3c10ed1a1910ede45d00
183f3f3c3c103c103c103c103c103c103c1a10eded87052e2b877dc4872e
182b877dc43130004bb00b534bb01e515a58bd000cfffb0008ffd60002ff
d638383859014bb00c534bb028515a58b9000dfff8b10e0a38385901435c
58b9000dffd4b621390e2c21390db8ffd4b637390e3237390db8ffd4b52d
390e2c2d392b2b2b2b2b2b5972715d00715d015d5959002b2b3311210116
173637012111231101230111980124015b30161935015f0105bbfe56affe
5805bafbf29148509b03fcfa4604cbfb3504e0fb2000>OXVQMX+ArialMT AddT42Char 
3 2200 91 <0001000f000003f1042600100201b9000dfff2400b0b0b4255100e0b0b42
5509b8fff2400a0b0b4255030e0b0b4255b1020243545840150f010b0604
02090602060d0a000a0f180f0f02550f2f2b003f3f3f3f11173931301bb7
0f12010f22193906b8ffde405019395a0f96049608990e9a0fc005c006c0
07cb0f090f4016391a031309150d1a1035013a0b81018e0b082f12570459
07590b580e9701980a980bb702b80cc80bca0ecc10da03d509d10ddb10e5
0a1212b10602435458400b0c0012110f180d10065506b8ffe8400e0d1006
550f0600020d000a0a0206003f3c3f3c111239392b2b01111239391b4066
0606030708090901060609050403030b0f0f100e0d0d010f0f0d100b0100
09020d0b030c100a060f020f0a10c600c60902102500091400000903020d
c60d010d250c03140c0c030a090903030206100d0d0c0c000a4f12011249
0d7e0c220a0f6106097e400ab8011bb74006500680060306b80243400e20
037e02224f00010049117cc4182b10f65df4ed1a19fd5dfd1a18ed10e510
f4ede65d003f3c103c103c3f3c103c103c87052e2b5d877dc4872e182b5d
7d10c400111239390f0f8708c4870e10c408c4870e10c4c408c4070e103c
3c083c59313001435c58b40e181d390bb8ffde400b1d390c221739032217
390bb8ffdeb2213910b8ffc0400a15390122213909401c392b2b2b2b2b2b
2b2b595d71002b5d2b2b015d592b2b2b2b33010133171617363737330101
230327010f0184fe99e1a32e1c2c25b3d7fe91018bddda3afee9022801fe
f947304233fbfe0cfdce014a59fe5d00>OXVQMX+ArialMT AddT42Char 
OXVQMX+ArialMT /CharStrings get begin
/D 39 def
/M 48 def
/x 91 def
end
OXVQMX+ArialMT /Encoding get
dup 68 /D put
dup 77 /M put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CLCRMY+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three /four 2{/.notdef}rp /seven 12{/.notdef}rp /D /E 3{/.notdef}rp /I 3{/.notdef}rp /M /N 3{/.notdef}rp /R /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 2{/.notdef}rp /x 135{/.notdef}rp]CLCRMY+ArialMT nfCLCRMY+ArialMT*1 [10 0 0 -10 0 0 ]msf400.482 20.4191 mo(10)[5.56 0 ]xshCLCRMY+ArialMT*1 [6.6667 0 0 -6.6667 0 0 ]msf411.034 14.8327 mo(3)shCLCRMY+ArialMT*1 [0 -12 -12 0 0 0 ]msf409.413 259.74 mo(Maximum Electrode Sensing Distance)[-9.9959 -6.672 -6 -2.664 -9.99591 -6.672 -9.99591 -3.336 -8.00409 -2.664 -6.672 -6 -3.336 -3.99591 -6.672 -6.672 -6.672 -3.336 -8.00409 -6.672 -6.672 -6 -2.664 -6.672 -6.672 -3.336 -8.664 -2.664 -6 -3.336 -6.672 -6.672 -6 0 ]ysh%ADOBeginSubsetFont: MYBBAA+Arial-ItalicMT Initial
ct_T42Dict begin
-0.516 -0.324 1.355 0.996
 256 array 0 1 255 {1 index exch /.notdef put} for  /MYBBAA+Arial-ItalicMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32efe77db1000000cc000000606376
74203de628370000012c000005606670676d54bf6d360000068c000005ce
676c7966c6f769b7000066e80000007468656164daab66ef00000c5c0000
0036686865610e470d6300000c9400000024686d74786991277800000cb8
000027e06c6f63610004846000003498000027e46d6178700d2403ce0000
5c7c000000206e616d65dcebf74b00005c9c000003a17072657048530f70
00006040000006a667646972000000000000000000000000000203880190
00050008059a0533001e011b059a0533005a03d1006602120805020b0604
020202090204e0000aff000078430000000100000000544d432000010020
fffc05d3fe570133073e01b2400001bfdff70000042605ba000000200004
05ba001905ba001905a6001a042600180000ffe70000ffe80000ffe7fe69
ffee05ba0019fe6fffe202e2000000b5000000b5000000000000000000bc
00bf008c00b300a600a600b10010010400640079008b008b00c100ea008a
00a2009101b40073007a00a400a200bb01bd0270005a00800017007000c3
00300103ffd000ac007d010d0006001200c900cd00560091ff8f0113000b
00190043007200b903c803d7ffee0146016e0002001b0044005200b603ee
00d80104023d05180573ff2d0005000900c600cd024cffe7001100150037
0049004e005c00a600a700b500c500db01280543ffdf0021004000530070
0079008e00a300ca018f0265027502a403c80555ff9affd7ffee00050008
002600460069007000730077009a00c100ef010a011301c101e50318049c
fef2fef9ffa4000000270034004100450075008000c400cb00d900e500f8
01550166022b0254037004050467ff16ffb40002001d0032004a004a004d
00550060007c007f008c009d00b102a3038cfec4fef7000100030003002d
00370037003a0056005a00a400cd00da0111011901250127014801530169
01a001fb02070239028102a402f7030503280328033603a303b503dd03df
03f10448047804e6060bff28ff4bff68ff78ff9fffbfffe10012001f0028
004c005a005c005e00610070007700810083008800b1009c009c009d009f
00a500b600b800b900ba00d300df00e100f200f7010e0132013b013c0166
016c017801ae01b501b701cf01d2025d026102a202cd0323035a03a303a4
040004440450047304d2fe00fe38fe8cfeb1feceff0effb2ffc7ffecfffd
0005001f002100250026002d00580065008100850091009900a500ab00af
00b000b000ba00db00dc00e900f80109010901100114011701240129012d
012f013601500151015a0167017401790182018e01900199019c01b001b3
01b701be01c501da01e801f001f201fb02000200020b020f021f0222022c
022d022e024e02670287029002ac02b502bc02bc02d002d402d802db02e5
02f102f9031103140314032203260348034a035c036f03780379037e03ab
03b503cb03e004040405040f0428042c048404a504af04cf04eb04f9050b
058e0593059805e505e506000610063d06500668069506b806d907030751
0766077e077f078207b60800082308ac00b200bf00b100af000000000000
000000000000025c00a100d301be00de01a6031402ab015002a70196010e
0318006b039b01d1054b0089023c02b0014d021603f301760176001503a9
01f400f400b6020402d8012b04a701a000bc01bd028c026b0278040f0157
04a904fd017404d2040302e400a602ee00000000061404a7000002760000
016d013e00000267006d009e021400cb02a40085007100c2009e06090290
00b9008f00260248003501490091009902ef00eb008e0011013f006a0079
00fd01a3057402a1017a03e8020c005601fd02df013b0574006606100081
01b3024e03cb01e400cd02bc0132014b01680239016200fd00e601a201e6
0255004d028300a3046705d401dd012b014e05680070000004e003490366
021302bb0000000000000000000000000000000000af00b4000300cd004c
03c8005c0192007200cd022b0049026f009d03bd01e900b4017c04670368
0099027802040183028102ac00b30348040b004200b403b400be01a803d6
012b00af0478016e0193ff45fd5d00f506a604ae03b10536041cffcafedc
01a501d0ffba02f10037ffca0355fe67019c04190055007c00e50072006d
000b00ab012b009c00db01a60008012b00250056008e00a5001500100109
00cb00460017004c005e01f200b80083001101360128004e0222006b0241
072006140000072700aaff370037006e002901da04a8007500ba40415440
3f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221
201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09080706050403
0201002c4523466020b02660b004262348482d2c452346236120b02661b0
04262348482d2c45234660b0206120b04660b004262348482d2c45234623
61b0206020b02661b02061b004262348482d2c45234660b0406120b06660
b004262348482d2c4523462361b0406020b02661b04061b004262348482d
2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d442359
20b0ed51582320b04d44235920b0042651582320b00d44235921212d2c20
204518684420b001602045b04676688a4560442d2c01b10b0a432343650a
2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b1021745
3ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164b050
515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4
182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae4
1b038a45186920b01723448a8a8720b0a05158b0112bb0172344b0177ae4
1b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c01182f
2d2c20b0032545b019234445b01a23444565234520b00325606a20b00923
4223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a5458
2321b03f1b235961441cb114008a5279b31940201945208a54582321b03f
1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323
430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343
650b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b0
00525823b002253823b002256538008a63381b212121212159012d2c4bb0
6451584569b00943608a103a1b212121592d2c01b005251023208af500b0
016023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510
f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c
b02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802
3623701020b802364520b0005058b00161593a2f182d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2cb4000100000015b00826b00826b00826b008
260f10161345683ab001162d2cb4000100000015b00826b00826b00826b0
08260f1016134568653ab001162d2c4b53234b515a5820458a60441b2121
592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d
2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d
2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b01060482046b010604859
0a21211b2121592d2cb012435c580cb00425b00425060c6423646164b807
085158b00425b00425012046b8fff060482046b8fff06048590a21211b21
21592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b
1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54
b00426024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46
2320468a608a61b8ff8062232010238ab902a502a58a70456020b0005058
b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1
400188535a58b910000020885458b202010243604259b12401885158b920
000040885458b202020243604259b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b2021002436042595959592d0000000100000005147b7317de885f0f3cf5
0819080000000000a372c2bf00000000c94a4554fbddfd670adf07fb0002
0009000100010000000000010000073efe4e00430aaafbddfa520adf0021
000700000000000000000000000009f80600010000000000023900000239
00000239007302d701150473005f04730069071d00c7055600a101870104
02aa00ad02aaff93031d00ec04ac00b80239003102aa005f023900760239
ff98047300910473012f04730078047300700473005d0473008e047300ab
047300f8047300990473008a023900750239003104ac00b804ac00b804ac
00b804730104081f006f0556ffd70556005905c700ba05c7005b0556005c
04e3005d063900c705c7005602390075040000440556005b0473005206aa
005a05c70064063900bb05560058063900bd05c700600556009004e300ff
05c700c6055600fe078d01000556ffbf055600ef04e300320239000d0239
00ae0239ff8803c100900473ff7e02aa012a0473005a0473004404000073
0473006c0473006a0239005d047300350473004401c7003d01c7ff080400
004601c7003606aa004304730044047300640473ffeb0473006902aa0044
0400004e0239007304730080040000a205c7009f0400fffd040000000400
002802ac006b021400bc02acff5404ac00a40556ffd70556ffd705c700ba
0556005c05c70064063900bb05c700c60473005a0473005a0473005a0473
005a0473005a0473005a040000730473006a0473006a0473006a0473006a
0239007d0239007d0239007d0239007d0473004404730064047300640473
0064047300640473006404730080047300800473008004730080047300ba
033301110473009a047300400473003e02cd006d044c008e04e3004a05e5
005305e500530800011802aa015a02aa00ed0464007c0800ffad063900ae
05b4009a0464007c0464007c0464007c0473004b049c000c03f4003805b4
007a069600f1046400000231000002f600a702ec008f062500bb071d0057
04e3009904e300ac02aa007604ac00b8046400540473002e0464007c04e5
001a047300a104730053080001260556ffd70556ffd7063900bb080000a4
078d00810473fffc0800000002aa00d802aa00d601c7010801c701000464
008003f4007804000000055600ef0156fde80473005102aa006102aa0021
0400006f0400006f0473000b023900b901c7fff102aaffd8080000880556
ffd70556005c0556ffd70556005c0556005c023900750239007502390075
02390075063900bb063900bb063900bb05c700c605c700c605c700c60239
007d02aa00cd02aa00c002aa00c902aa00db02aa018e02aa014802aa004d
02aa00b002aa004002aa01080473001801c70026055600900400004e04e3
003204000028021400bc05c7005b04730064055600ef0400000005560058
0473ffeb04ac00b804ac010502aa011702aa009802aa00a906ac007b06ac
00ab06ac00a90473ffe8063900c70473003502390075055600900400004e
05c700ba0400007305c700ba040000730473006c046b00b502aa01360556
ffd70473005a0556ffd70473005a05c7005b0500007005c7005b0556005c
0473006a0556005c0473006a0473005201c7003604730052024000380473
00520333003605c700640473004405c7006404730044063900bb04730064
05c7006002aa004405c7006002aa0044055600900400004e04e300ff0239
001b04e300ff02d5006d05c700c60473008005c700c60473008004e30032
0400002804e300320400002804900057063900bb06b200b4049000660472
00620384004504d3006402fe00b00538006f046bff7e0400007302eb0077
08c000190800004f040000990800004f040000990800004f040000980400
009807d5016a05c000ee04ac00b804d5009d04ac007104d5022204d50105
05abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e05ab
ffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905ab02d6
05ab006605abffea05d5ffff04d500920800000007eb013007eb012007eb
013007eb012004d500b204d5008004d5002a082b0198086b01b807550010
060000f40600006f0440003a0540003704c0003f04150040040000250600
005505de0075038d003b04eb00650180010402d50115071500b802960019
04d5009202d6008302d6008304d500b202d600700556ffd70473005a05c7
00ba0400007305c700ba040000730556005c0473006a0556005c0473006a
0556005c0473006a063900c704730035063900c704730035063900c70473
003505c700560473004405c70056047300440239007501c7003d02390075
01c7003d0239007501c7003d0239ffdc01c7ff960400004401c7ff080556
005b04000046040000460473005201c7ff6e05c700640473004405c90062
04730049063900bb04730064063900bb0473006405c7006002aaffc70556
00900400004e04e300ec0239001805c700c60473008005c700c604730080
05c700c60473008005c700c604730080078d010005c7009f055600ef0400
000001c700360556ffd70473005a0800ffad071d0057063900ae04e30099
02390128078d010005c7009f078d010005c7009f078d010005c7009f0556
00ef0400000001c7013302aa00990473004004cd005a06ac007b06ac0094
06ac009306ac006302aa002602aaffe002aa017b02aa00610556ffd4064f
006306c50068031c0062065a005706ec00600633001b01c7ffee0556ffd7
05560059055effec0556005c04e3003205c70056023900750556005b0556
ffec06aa005a05c7006405300008063900bb05cc00570556005804cc002d
04e300ff055600ef0556ffbf06a500fd0616000702390075055600ef0490
0066038400450471004501c7003d046600960492ffe90400009e03b50064
047100450457008201c7003d0400003c03f0ffcd0462ffe8040000a20393
0073047300640495ffe403e4006f04660096045eff6d05d2009c063b0064
01c7003d046600960473006404660096063b00640556005c06be00e7045a
005705a900bb055600900239007502390075040000440887ffea07dc0057
06c100e504b70057051d00e705ca00570556ffd70535005705560059045a
005705a2ff7f0556005c0756ffb704e9006305b9005705b9005704b70057
057cffeb06aa005a05c70056063900bb05cc00570556005805c700ba04e3
00ff051d00e7065c00a40556ffbf05d10057056300db075d005707620057
067100e70717005705350057058d005a082e00570574ffca0473005a0480
0076042d006403f2004e046c00640473006a0581ffc503b8001f04730080
0473008003c7003f0483ffd8057c003f0467003f047300640467003f0473
ffeb0400007306aa00430400000006af005f0400fffd0493007d04240097
06a4007906cf007904f8007905e3003f0435003f03ef00350604003f0446
ffe80473006a047300450306003f03f700610400004e01c7003d01c7003d
01c7ff080748ffd8069f003f0473004503c7003f040000000473007d03f0
005702b7003f0800005108aa005b055c00ac0000003f0000ff930000ffa2
0000ffa2000000760000fff30000fff30000fffd0000fffd000001c00000
ff850000012e00000053031000f10000014a02330082000003ca0000ffc3
0239006d0481001d0456ffe60331ffcd041100a104d1005601f9004f030f
00b304ca004f04b8008b01f900bc041300a903b0000703b400b004ca004f
04cf002301f9fff802d2fff00498006c043cffd30488009c045f003303b1
00af03d4fff304660003041300a9058e00a20524ffe103f2004f03f200bc
03f200bc01e3009e0356009e0686004f01f9009b041300a90413007003b4
001703b400170448ffe1058e00a2058e00a2058e00a2058e00a20481001d
0481001d0481001d0456ffe60331ffcd041100a104d10056024b002d034a
003904b8008b024b004e041300a903b0000703b400b004cf002302d2fff0
0498006c0488009a045f003303d4fff304660003041300a9058e00a20524
ffe101f9004f0456ffe603b00007045f0033049b00370000ffdc0000ff25
0000ffdc0000fe510000ffdc0000fe510000ff160000ff160000ff160000
ff160000ff160000ff160000ff160000ff160000ff160000ffdc0000ff16
0000ffdc0000ff200000ffdc047300a408000000067e00bb04d600640659
00c6051200800000fef40000fd410000fdb70000ff580000fdec0000fe3b
0000ff2e0000ff380000fe090000fd760000feb30000fd0e0000fd660000
ffec0000ffc40000fe44041b005606ac007b06ac007b0000ff6a0000fdb8
0000feca0000fdc80000ff2d0000fdc70000fced0000fc0e0000fc0e0000
fd140000fc910000fc7c0000fc920000fc460000fc000000fc460000fbdd
0000fef40000ff500000fe7e0000fc6a0000fc950000fdf70000fe330000
fc990000fcf90000fcef0000fc9f0000fc8b0000fbde0000fd2c0000fd4b
0000fc780000fc6801c7003d0556ffd70473005a0556ffd70473005a0556
ffd70473005a0556ffd70473005a0556ffd70473005a0556ffd70473005a
0556ffd70473005a0556ffd70473005a0556ffd70473005a0556ffd70473
005a0556ffd70473005a0556ffd70473005a0556005c0473006a0556005c
0473006a0556005c0473006a0556005c0473006a0556005c0473006a0556
005c0473006a0556005c0473006a0556005c0473006a0239007501c7003d
0239003801c7ffe8063900bb04730064063900bb04730064063900bb0473
0064063900bb04730064063900bb04730064063900bb04730064063900bb
04730064067e00bb04d60064067e00bb04d60064067e00bb04d60064067e
00bb04d60064067e00bb04d6006405c700c60473008005c700c604730080
065900c605120080065900c605120080065900c605120080065900c60512
0080065900c605120080055600ef04000000055600ef04000000055600ef
040000000556ffd70473005a0239007501c7003d063900bb0473006405c7
00c60473008005c700c60473008005c700c60473008005c700c604730080
05c700c60473008000000030000000300000003000000030045a003e0306
003c0756ffb70581ffc504b7005703c7003f04b7005703c7003f05c70056
0467003f047300ea040000a2047300870400fff40556ffbf0400fffd0563
00c6042400810563007504730044063900c104730076063900bb04730064
01f900a10000000002bc000003f2008c0473004405d8008c053500570473
0044053500570473004405c700a005c700ba0400007305c7005b0646008c
0535003b0473006c047200000556004404e9006604e3ff2a063900c703f9
00890709004401c70036023900620556005b0400004601c7003603f0ffcd
06c5007005c7ff3004730044063900bb06f200bb0557006405d8008c0473
ffeb05560058055600820400005704cc002d02aa00c80239ffe404e300a0
0239007304e300ff061600bf05c700c605bd00d10400000004e300320400
002804e3ffba04e30033040000110400fffa04730078041500490381000a
0400006b0473ffeb021400bc034e00bc04ac0072023900730aaa005b09c7
005b0873006c08730052063a0052038e003609c70064078e0064063a0044
047300760556ffd70473005a0000fff90556ffd70473005a0800ffad071d
0057063900c704730006063900c7047300350556005b04000046063900bb
04730064063900bb0473006404e3ffba0400ffae01c7ff080aaa005b09c7
005b0873006c063900c7047300350846005604f1000405c7006404730044
0556ffd70473005a0556ffd70473005a0556005c0473006a0556005c0473
006a0239007502390036023900750239007d063900bb04730064063900bb
0473006405c7006002aa004405c7006002aa004405c700c60473008005c7
00c604730080055600900400004e04e300ff02390061045cffd6037effb5
05c7005604730044055a005604d6006404d6006404e30032040000280556
ffd70473005a0556005c0473006a063900bb0473006400000035063900bb
04730064063900bb04730064063900bb04730064055600ef040000000473
00880473006c04730044047300440400003c040000100473006c0473006c
0473007105a200760384004503b8001f04ed001f041200640239ff380473
00350473003504670064040200a604ef007c0473007c0473004404730044
01c7001f01c7003e02d9000001c7ffcf01c7fff001c700070482003006aa
006d06aa006d06aa00430473ff100473004404a9003f0473006406200064
063b00640473006402aaffb002aaffb002aaffb002aaffed02aa001502aa
004402aa007504460044044600410400ffd70253ff380271ff3802510059
02c8ff330239002b0239001c047300420481005b046600960400ffd305c7
ffd30400ffdd041e009504000028046100280400ffae0400ffcc040000ca
040000c70400003704000023063900bb0418004404120059046700640467
003f0258ff1f0400ffd703950044047300690400003d04000083076b006c
073e006c07c7006c055e007603b0007305ab00730602005d0522003604bf
003603e20064043800130277003a0277003a00faffa201c1003a01c1001e
01c10027029d003a041400d302c9004f0187010402d7011501c7010801c7
010001c7013302aa01c002aa01ad02d900de02d900d504ac00b804ac00b8
04ac00ad04ac00ad02aa01d902aa015a02aa012a02aa012102aaff9502aa
005e02aafffb023900700239015202aa00fb02aa00fb02aa00a602aa00a6
02aa00a602aa001002aa000202aa00a202eb00d600be00400299006302b1
004002d900d5031000960310009603100096031000960310009602aa0062
02aa006202aaffc702aa00c902aa00d60457009604570096045700960457
00960457004304570043045700430457004304570043031000430457002f
0457002f0457002f0457002f0457002f0310002f04570025045700250457
002504570025045700250310002f0457001a0457001a0457001a0457001a
0457001a0310001a04570042045700420457004204570042045700420310
004204570096045700960457009604570096045700420457004204570042
0457004204570042031000420457002f0457002f0457002f0457002f0457
002f0310002f0457002f0457002f0457002f0457002f0457002f0310002f
045700260457002604570026045700260457002603100026045700420457
004204570042045700420457004203100042045700960457009604570096
045700960457004204570042045700420457004204570042031000420457
002604570026045700260457002604570026031000260457002304570023
045700230457002304570023031000230457002f0457002f0457002f0457
002f0457002f0310002f0457004b0457004b0457004b0457004b0457004b
0310004b0457009604570096045700960457009604570042045700420457
00420457004204570042031000420457001a0457001a0457001a0457001a
0457001a0310001a04570024045700240457002404570024045700240310
00240457002f0457002f0457002f0457002f0457002f0310002f0457004e
0457004e0457004e0457004e0457004e0310004e04570096045700960457
0096045700960000ff780000ff6a0000fea20000ffb30000003f0000ff9b
000000150000ffac0000ffd000000091000000250000ff140000ffb30000
ffb3000000200000001100000045000000df0000fedc0000fea70000fee2
0000fef00000ff7d0000ffbb0000ff2c0000feec0000fee90000fee30000
fe400000fe1b0000ff210000fe460000fec60000fee70000fe9b0000fef5
0000ff630000fe210000fe500000fe690000fe260000fe640000fe640000
fe190000fe400000fd1b0000fe5d0000fe950000fea90000fd980000fe16
0000fe620000ff2c0000fe210000fedb0000fe3a0000ffca000000540000
fe6d000000100000ffe70000ff6f0000000d0000ff160000fefb0000ff26
0000fd8d0000feea0000fee70000ff6f0000ff6f0000ff6f0000fe980000
fedf0000fd1f0000ff310000ff2b0000ff530000ff000000ff010000ffc9
0000fef10000ff0e0000ff1d0000ff130000fee10000fe210000ff400000
ffce0000ff4c0000fed002aa015a02aaffe902aa004f040a00430466003c
05ba00ef070e007c05ba00ef04730064063b00640482ffd3063900bb0473
006405c700c80400003704e3005d0306ffe904ff006a043c0056060d00b4
049d00f506c5ffe406aaffe1056300dc047300b20563002b0419ffc80556
00820556008204e0007d04c5008805f700bb046e00640352003302de0045
0482ffd304a200640400007301c7ff08063900bb03870064038700110556
005c05b900570473006a047300800a6a00bb04c2006106140044063b0044
07390043058e00440558ffa50400ffbd070600420572004306a1001d057b
00430831004306d9004404e9004903b8fffd06a5011a05d200c5063900bb
04730064061400fe04b800a2061400fe04b800a208de00bb07590064069f
005004cc001e0a4200bb070200640000feca0a6a00bb04c2006105c700ba
04000073047300390000ff5a0000ff5800000050000000320000fc2b0000
fc4c05b9005704730080053500570435003f055600580473ffeb0528004b
0434004404e9006303b8001f04b7005703c7003f05f100e7048a00790721
0056059b003f08b3005706b7003f05c7008b0400005105c700ba0400006c
04e300ff06aa0043072e00e7052900b0056300db0424009706cd00400514
001f06cd00400514001f023900750756ffb70581ffc50504004b0428002a
057cffeb0483ffd805c7004b0467002a05c700560467003f056300db0424
009706aa005a057c003f02aa00db0556ffd70473005a0556ffd70473005a
0800ffad071d00570556005c0473006a063900c1047300760756ffb70581
ffc504e9006303b8001f04e900630400ffae05b900570473008005b90057
04730080063900bb04730064063900bb04730064058d005a03ef0035051d
00e704000000051d00e704000000051d00e704000000056300db04240097
0717005705e3003f055600490473006c079d004906ab006c077f0108061c
00b804e9010803b800b807d8ffeb06c4ffd8081a005606a5003f063900c7
0467006405dc00ff08ea00430000fec30000ff7900000033000000700000
fffb0000feb9000000320000ffd40000ff7c0000ff700000feb2000000b0
000001360000ff6e0000fe6c000000de0000003d0000fee50000feec0000
feb40000fde20000fef5000000100000fec70000fece0000001d00000021
0000ff7a0000fe9500000041000001ac0000003000000030000000060000
00060000009400000074000000300556ffd70473005a0556005904730044
0556005904730044055600590473004405c700ba0400007305c7005b0473
006c05c7005b0473006c05c7005b0473005f05c7005b0473006c05c7005b
047300560556005c0473006a0556005c0473006a0556005c0473006a0556
005c0473006a0556005c0473006a04e3005d0239005d063900c704730035
05c700560473004405c700560473004405c700560473004405c7fffd0473
fff305c70056047300440239ff4501c7fef5023900750239007d0556005b
040000460556005b040000460556005b040000460473005201c7ffe80473
005201c7ffe80473005201c7ff220473005201c7feff06aa005a06aa0043
06aa005a06aa004306aa005a06aa004305c700640473004405c700640473
004405c700640473004405c7006404730044063900bb04730064063900bb
04730064063900bb04730064063900bb04730064055600580473ffeb0556
00580473ffeb05c7006002aa004405c7006002aafff205c7006002aafff2
05c7006002aaff39055600900400004e055600900400004e055600900400
004e055600900400004e055600900400004e04e300ff0239007304e300ff
0239003804e300c90239ffa804e300ae0239ff7005c700c60473008005c7
00c60473007d05c700c60473008005c700c60473008005c700c604730080
055600fe040000a2055600fe040000a2078d010005c7009f078d010005c7
009f0556ffbf0400fffd0556ffbf0400fffd055600ef0400000004e30032
0400002804e300320400002804e3003204000028047300440239007305c7
009f040000000473005a01c7003604900066049000660490006604900066
049000660490006604900066049000660556ffd70556ffd7068200b80682
00d2068200b8068200d2068200e3068200e3038400450384004503840045
038400450384004503840045061e0082061e00ab07ae00a507ae00bf07ae
00a507ae00bf047100450471004504710045047100450471004504710045
0471004504710045068f0082068f00ab081f00a5081f00bf081f00a5081f
00bf081f00d0081f00d001c7003d01c7003d01c7003d01c7003d01c7003d
01c7003d01c7003d01c7003d03010082030100ab049100a5049100bf0491
00a5049100bf049100d0049100d004730064047300640473006404730064
0473006404730064069d0082069d00ab082d00a5082d00bf07c900a507c9
00bf04660096046600960466009604660096046600960466009604660096
04660096068200ab07ae00bf081200bf07ae00e3063b0064063b0064063b
0064063b0064063b0064063b0064063b0064063b0064067a006b067a006b
080a00a5080a00bf07a600a507a600bf07a600dc07a600dc049000660490
00660384004503840045047100450471004501c7003d01c7003d04730064
047300640466009604660096063b0064063b006404900066049000660490
006604900066049000660490006604900066049000660556ffd70556ffd7
068200b8068200d2068200b8068200d2068200e3068200e30471ffeb0471
ffeb0471ffeb0471ffeb0471ffeb0471ffeb0471ffeb0471ffeb068f0082
068f00ab081f00a5081f00bf081f00a5081f00bf081f00d0081f00d0063b
0064063b0064063b0064063b0064063b0064063b0064063b0064063b0064
067a006b067a006b080a00a5080a00bf07a600a507a600bf07a600dc07a6
00dc04900066049000660490006604900066049000660490006604900066
0556ffd70556ffd70556ffd70556ffd70556ffd702aa016702aa004f02aa
016702aa00c002aa00ed0471ffeb0471ffeb0471ffeb047100450471ffeb
068200d10682007c06f300d106f3007c05c7005602aa00b802aa00b802aa
00e301c7003d01c7003d01c7003d01c7003d01c7003d01c7003d02390075
02390075036500d10365007c02aa00d202aa00d202aa00e3046600960466
009604660096046600960495ffe40495ffe40466009604660096055600ef
055600ef068200a906e6007c061e00ab02aa006102aa006102aa012a063b
0064063b0064063b0064063b0064063b0064076500d1069d007c074200d1
067a006b0616000702aa015a02aa01900473006105c7008f05c700ba06aa
004305c70043090a0060078d002f0556005b04e300a30800ffd70400ffd3
04c100660000ff2b0000ff610000ff320000ff4401c7001f01c7ff08042b
ffa1055600580506006c025aff1f0508004402c8ff8d0555007505550075
02aa001e02aa001e02aa005002aa005002aa003002aa00ac02aafffe02aa
ffce02aaff7b023900b702aa018602aa018602aa002602aa0026032effbe
032effbc02aaffc80000003b0000004a0000ff910000fec20000fefb0000
fefb0000fe410000004a0000ff7b0000ff530000fea2055600580473ffeb
03ffffd205bcff9e071d00570401004004000073047100440471002903c5
004403b8001f01c7ffd6035000150400003c03950022057c003f04b0003f
047300640400003c047300300400fff704e3001c078d008103a8003c0473
006e04730064044800440446ffe804460044041d00cb0466009604730020
0595002304730020040000a205c7009f0400002803b8001f03b8005704db
fff80306003f0400ffd30467003f0448004405d200d40483ffd803ee005d
05bd004803a1007a03a1007a03d0007a039d007a039d007a03eb00a203cf
007a0149007a02ac007a0399007a0302007a046f007a03c9007a03cb007a
03f900a2030f008a0381007a03a7007a032c00de038d00a3052000ea02de
006e02de009602d400ab04bd009f027e003a032c00ab031900ab031900ab
0250007c025000600322008300ff00250286003a03ff003a0275003a0328
00ab02d7008d032800a7032800b302ef0014019000a202d4008f03bc00d0
0435007802dc00cc0388006e0330002802f000da030c00a203810099030c
fffb00ffffe20187ffb002d4000c02dc00510330ffb702f0005e0309ffe9
03810012030cff7305ad001d053d00a105fd005604dc000704e000b005f6
004f053f00a90650ffe104ac00670000fd850000fddb0000fde30473fffc
02aa00ec02d5006e0400000008000000040000000800000002ab00000200
0000015500000473000002390000019a000000ab00000000000005e50053
05c700ba06aa0052057cffea074d00800711006c070c00690556ffd705c7
005f0400ff860473003d04e3ffc1040000600400002604a500c600000102
0000fee50000fe590000000b0000ff530495ff8f05c700a005c700ba05c7
00a0045a00570306003f0000fece0000ffc30000ff4202d200240000fee1
047300440473006c0239ffd006aaffd00473ffb80473ff1c02aaffa002aa
ffa00400004e0239ffc0040000280473ffef030b007a047400050618ffe2
01c7001f01c7001f0473ffeb0466003f04810021047300440473006c0239
ff83058200350400004601c7ff5b06aa0043047300440473ffeb02aaff6f
0400004e0318ff38040000a20400fffd040000280473005a0473006c0473
006c0473006a0384004503b8ffb30514007601c7003d0400ffcb0253ff56
04730080045cffe40309008002da00a702da0068032900a60250006001a5
009701a5ffea0322008302d600b400ff004b00ff006200ff006200ff004b
01e1000400ff003e00ffffce026d006403ff003e03ff005a0275ff6f0275
003902d20052032800b1032800a802c000370187ffe30190004802750038
033700ac027500730275007102dc0047029f004c029f004c02f0004c02bc
002b032900b70000ff6d0000ff8e0000ff0a0000ff830239006f02de000f
0319003103280030030c000b03190023063900c70556ffd70556005805c7
00ba02aa0012049000660490006604900066049000660490006604900066
049000660490006601c7003d01c7003d01c7003d01c7003d01c7003d01c7
003d01c7003d01c7003d0466009604660096046600960466009604660096
04660096046600960466009601c7003d01c7003d01c7003d01c7003d0466
009604660096046600960466009603a0007b0556001f05c700780556ffec
0556005a0473ff860400004401c7ff08060a00bb0473006905c7000c02aa
00330556009f040000000400003c040000730400003c01c70036045aff83
0306ff610556ffbf0400fffd0556ffbf0400fffd04e9006603840045057c
ffd504abffd80000ff5d0000ff9f0000ff980000ffc70000ff2a0000ff27
0000fee4000000330000fe51078b002303eb000b0400003c0473002201c7
00310473ffee0556005805c7002f0473ffb80239ff3705c7005604730044
0556005b0400004604e30032040000280400006b04d000560383003f0538
006f0000fffd000000250000ffcc0000ffa80000ffb00000fee201c7003d
05c9005605c7006405c900ad0000fec00000ff210000feb30000feba0000
feb80000feb70000febd0000fed90000fec50000febc0000fea3063900bd
04730069078d010005c7009f056200560000ff84060a00bb04d000a0084c
010006ba009d0239009d038000cc018700d0018700fe0400009904000099
0239012a0239012c023900d002aaff8804e300c4047300ad000000000000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
0074000000740001000009f800f2003c005a000500020010002f00550000
0281024d000400040000000e00ae0000000300000000006a000000000003
000000070062006a0001000000000000003500cc00010000000000030015
010100010000000000040015011600010000000000060015012b00010000
00000007003101400003000104090000006a01710003000104090001002a
01db0003000104090002000e02050003000104090003002a021300030001
04090004002a023d0003000104090006002a026700030001040900070062
029100a90020003200300031003100200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e002e00200041006c006c00200052006900670068007400730020
00520065007300650072007600650064002e0041007200690061006c0020
0069007300200061002000740072006100640065006d00610072006b0020
006f006600200054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e002ea9203230
313120546865204d6f6e6f7479706520436f72706f726174696f6e2e2041
6c6c205269676874732052657365727665642e4457484f4a522b41726961
6c2d4974616c69634d544457484f4a522b417269616c2d4974616c69634d
544457484f4a522b417269616c2d4974616c69634d54417269616c206973
20612074726164656d61726b206f6620546865204d6f6e6f747970652043
6f72706f726174696f6e2e00a90020003200300031003100200054006800
650020004d006f006e006f007400790070006500200043006f0072007000
6f0072006100740069006f006e002e00200041006c006c00200052006900
67006800740073002000520065007300650072007600650064002e004400
570048004f004a0052002b0041007200690061006c002d00490074006100
6c00690063004d00540052006500670075006c0061007200440057004800
4f004a0052002b0041007200690061006c002d004900740061006c006900
63004d0054004400570048004f004a0052002b0041007200690061006c00
2d004900740061006c00690063004d0054004400570048004f004a005200
2b0041007200690061006c002d004900740061006c00690063004d005400
41007200690061006c002000690073002000610020007400720061006400
65006d00610072006b0020006f006600200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e002e000000b15430bb02aa0001004002a8b2393340b802a8b3
10153240b802a8b2073340b802a9b30c12327f411102a600af02a600bf02
a600ef02a60004003002a6004f02a6005f02a60003004002a6b28f3340b8
02a6b25f3340b802a6b34e513280b802a6b34c4d3240b802a6b340483240
b802a6b30a0d3240b802a6b3093a3240b802a6b330333280b802a4b34578
3240b802a4b3323a3280b802a4b32a313240b802a4b32425327f411002a4
000100ef02a40001000f02a4002f02a4003f02a4007f02a40004004002a4
b3151d3280b802a4b309143240b802a3b31a1b320fbf02a3007f02a300ef
02a30003004002a3400a091432124f064f0702ef413701eb0001009f01eb
0001007f01eb0001005f01eb0001003f01eb0001002f01eb0001000f01eb
0001007f01ea000100ef01ea000100bf01ea000100af01ea0001002f01ea
0001003f01ea0001004f01ea0001006f01ea0001007f01ea000101ed01ed
01ec01ec01eb01eb01ea01ea4012002c01001f01102c01101f01402c0140
1f01b90109010bb2341f91b8010b4037341f2e20431f3220431f3320471f
2c20431f1f20431f7b2a481f2d2a481f212a441f37010001010009010200
0800171700000012110840b801acb7fe870dfd870d0009b8013fb22a4c1f
4109013a00ba0401001f0136001f019a001f0104b22a721fbe0101002001
9a001f0100002002abb21ffb2db80156b21ffa1fb80801b21ff91fb80201
40131ff81fe41ff71fbb1ff51f4a1fc92aab1fb92db8019ab21fb81fb804
01b21fa02ab802ab400f1f8b1f521f7b2ae41f781f6c1f6e20b80401b21f
6c21b80401400b1f632aab1f5a2a5a1f5820b802abb21f4e20b80156b21f
471fb8019ab61f452aab1f442ab80101b61f401f891f332db80401b21f32
21b80401b61f311f721f2e1fb8019ab21f2c1fb80401b21f291fb80801b2
1f281fb80801b61f271f6c1f2221b8040140451f550d090d093790dc0790
a80790a607907e07904107903b07903607903507903007902f07902b0790
2507901d071408120810080e080c080a080808060804080208000814b8ff
e0402b000001001406100000010006040000010004100000010010020000
01000200000001000002010802004a00b013034b024b5342014bb0c06300
4b6220b0f65323b8010a515ab005234201b0124b004b544218b0382b4bb8
07ff52b0372b4bb007505b58b101018e59b0382bb00288b801005458b801
19b101018e851bb0124358b900010119858d1bb9000101ff858d59590016
763f183f123e113946443e113946443e113946443e113946443e11394660
443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b
2b2b2b4b5079b9001f0158b3071f3d072b2b4b5379b900900158b307903d
072b2b181db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58
b901ae01ac4544b901ad01ac45445958b9032c01ae455258b901ae032c44
59594bb8019a53205c58b9003f01ae4544b901ae01ae45445958b908d600
3f455258b9003f08d64459594bb8040153205c58b9002301ae4544b90020
01ae45445958b916200023455258b9002316204459594bb8040153205c58
b9001e01ad4544b9002a01ad45445958b917e0001e455258b9001e17e044
59594bb8040153205c58b1ba234544b1232345445958b9162000ba455258
b900ba16204459594bb03c53205c58b11f1f4544b1211f45445958b90102
001f455258b9001f01024459594bb04653205c58b11f1f4544b12d1f4544
5958b9012e001f455258b9001f012e4459594bb8030153205c58b11f1f45
44b11f1f45445958b90d20001f455258b9001f0d204459592b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b65422b2b45695342014b5058b108004259435c58b108004259161070
3eb0124358b90d193ea51bba00d203eb000b2b59b00a2342b00b2342003f
3f182b103c012f060cb0062342b0072342b0124358b93b21187e1bba0400
01a8000b2b59b00c2342b00d2342b0124358b92d412d411bba0400040000
0b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59
b0102342b0112342002b2b2b2b2b2b2b2b2b2b2b74747575757500184569
444569444569444569447373737373737373757373737373737374004bb0
2a534bb03f515a58b1070745b040604459004bb030534bb03f515a58b10b
0b45b8ffc0604459004bb02e534bb03c515a58b1030345b040604459004b
b02e534bb03c515a58b1090945b8ffc0604459435c58b64f2c014f1f0137
2b7474592b732b2b2b7373742b2b2b2b2b2b2b2b2b2b2b2b74732b2b2b2b
742b000000>
[117 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> MYBBAA+Arial-ItalicMT AddT42Char 
1 0 0 <0002010000000500050000030007004ab10201bb012e000600070237b200
0504b8012eb403000a0704b8012eb5010019080605bb012e000200030143
b3095bbe182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c3130
211121112521112101000400fc2003c0fc400500fb002004c000>MYBBAA+Arial-ItalicMT AddT42Char 
MYBBAA+Arial-ItalicMT /CharStrings get begin
/space 3 def
end
MYBBAA+Arial-ItalicMT /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/CLCRMZ+Arial-ItalicMT /MYBBAA+Arial-ItalicMT findfont ct_VMDictPut/CLCRMZ+Arial-ItalicMT*1 [32{/.notdef}rp /space 223{/.notdef}rp]CLCRMZ+Arial-ItalicMT nfCLCRMZ+Arial-ItalicMT*1 [0 -12 -12 0 0 0 ]msf409.413 56.9879 mo( )shCLCRMY+ArialMT*1 [0 -12 -12 0 0 0 ]msf409.413 53.6519 mo(\()sh%ADOBeginSubsetFont: GOFRMX+SymbolMT Initial
ct_T42Dict begin
0 -0.219 1.109 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /GOFRMX+SymbolMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3259acef4f000000cc000000566376
74202ac4fb8500000124000005046670676d5d3ae803000006280000059f
676c796651713737000016800000018668656164d4aa408900000bc80000
0036686865610fa0038100000c0000000024686d74787750493e00000c24
000002fc6c6f63613278327800000f20000001826d617870021906370000
10a4000000206e616d656b116eb6000010c4000002457072657056a9a53f
0000130c0000037367646972000000000000000000000000000104cd0190
00050008059a053300000125059a0533000003a0006602120c0305050102
01070602050700000000000000000000000000000000544d43200040f020
f0fe058cfe460133080b01c280000000000000000000055d0031054c001f
054c001c0394001b0000ffe10000ffe10000ffe4fe59ffed056b0023fe6a
ffdc270f000000b4000000b4000000000000000000610025005e0029004a
00c200f000be012a005000c0ffd0006300580277002d004a008f00b700c0
00de004400640002001a017c0020ff9c008c0026008300a00039041affb5
004c00e8080f00160024003a016f000600150067009e01dc0049004b002d
003b00470089007200470051006700f7013801dc0001000a005d00610094
009b00be00ce00df00190026002e00d6010701f7ffbb004300530063007b
00b900de0542058b0013009100a700a900c100e5012e01a401ea03eeffb5
ffccffeb0026002900310036005b00620062009200a100a700a700cb0223
03a3ff1aff7bffa8ffc8001c004400ab00b400c100c500ce00f601200156
016302a60379fefaff6effab0000000c00150024003a003a0041004c004e
007400a500ce00d600fb0109010901820220023f0263fe11ff170007001f
0020002b00530055006d007e0088008d0094009a009f00af00e8013f0168
01cd01ee020d028002bf0550074e074e09bffdd5ff47fff6000c000c0021
00290057006b0078007e009200930096009a00a100a500c400c400f000fd
0136013b013e01490152018f018601a501f8022b02db02fb030e030f032c
03590360037c03e203f90805fd4ffe97fed0ff50ff78000100010006000a
0025004300440054005c007000730077007c00800088008e008e00900091
00ab00ab00b000b900bf00bf00c300dd00e300e300e600e800ec01020105
0109010a012a012a01300130013b0140014a0155015f01670173019701b6
01b801be01c501ea01f4023402360239024f0252026702700274029002b0
02b102bf02e402f302fb033a03450373037f03ab03c203c803d203da0400
044a046104690475049404b004d504f004f404fe050005230523052e0561
05a0fda2fe4bfe5bff26ff3bff62ff8dff90ff90ffe80007001e00250026
002700440050006200630066006700700070007100710079007e00850091
0096009e00a100a100a500b600b800bc00c000c200c500c600d000da00dd
00dd00e200f700f901000102010501150121012d01310136013d01470147
015a01680176017c0180018e019a01a501b101b501b501c001dc01ea01fe
023902560259025e0276027c028d0297029b02b902c002d602db02ff0306
030f03180347034b0357035b035e0374039603980399039e039f03b803c0
03c60402043a045004720483049004a204af04c704d304dc0530053b058a
058a05b005b505bd05e60612061b0634065306b80706087908e708fe00b3
00c700b100b5000000000000000000000000000000000188011001b100ad
01e70304038002cc0258020b02d6018204cf01270274023c0100058e006e
00f202c0021d01d2023701570363015a002500820166015b009d031c03a2
034a00cc056e0153035001640053049700fc05c30061058a02b20302058a
03fd01f902ab0068008e026bfda9ff59010e005301a402a600ab007d003c
0029041a00d6023904b90125022902bf07ae01b8003e07060339033a080f
07ae01a403e300000053080f01ea006103e2004c00e102a6035202a6080f
00e601dc074f006e00fd03af0000007d003e01a4fe1100a905590260011c
02a4014cfd83fdd8039bff9f011902e20000fd11fd41024301b60155ffaa
02be00ef0097fef904e000be02db005501dc0063006b007800f200530077
003a015600fc020d00290053006100704040543f3e3d3c3b3a3938373534
333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716
1514131211100f0e0d0c0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d
2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a
234445b01923442d2c2045b00325456164b050515845441b2121592d2cb0
0143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743
650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c
58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb0172344
2d2cb01243588745b0112bb0172344b0177ae41b038a45186920b0172344
8a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c
2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b0018559
2d2c20b0032545b019234445b01a23444565234520b00325606a20b00923
4223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a5458
2321b03f1b235961441cb114008a5279b31940201945208a54582321b03f
1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323
430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343
650b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b0
00525823b002253823b002256538008a63381b212121212159012d2c4bb0
6451584569b00943608a103a1b212121592d2c01b005251023208af500b0
016023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510
f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c
b02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802
4123701020b802414520b0005058b00161593a2f182d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2cb4000100000015b00826b00826b00826b008
260f10161345683ab001162d2cb4000100000015b00826b00826b00826b0
08260f1016134568653ab001162d2c4b53234b515a5820458a60441b2121
592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d
2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d
2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b01060482046b010604859
0a21211b2121592d2cb012435c580cb00425b00425060c6423646164b807
085158b00425b00425012046b8fff060482046b8fff06048590a21211b21
21592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b
1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54
b00426024b545a8a8a0ab012435c5a58381b2121592d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b202020243604259b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b2021002436042595959592d0000010000000500003e0fddad5f0f
3cf5081d080000000000a348bc3b00000000c1473905fffffe3e08e7080b
0000000b000100000000000000010000080bfe3e00000856feabfc2e08e7
0001000000000000000000000000000000be04cd00670000000000fa0000
0200000002aa00e405b40061040000250464005106aa0047063900480383
003a02aa005402aa002d04000091046400250200006e0464002502000091
0239ffff0400004a040000f00400002c0400005304000020040000620400
00590400004c0400007c04000051023900ac0239008b0464003c04640025
0464003c038d00580464002505c700140556002205c7001204e5001a04e3
0027061b004804d3002305c7002602aa0033050c004e05c70025057d0014
071d002505c7ffe805c7004c0625002305ee004a0473002604bc003804e3
003b05850016038300470625003805290042065c002504e3001602aa00a7
06e7016a02aa004a054400250400ffef040003da050c0054046400790464
004603f4004503830049042b0047034affff04d3002d02a2004304d30045
0464001504640031049c007c042b00280464005804640037042b00590464
006904d3004e0383002b049c004705b40041057d005003f2005b057d002f
03f4005b03d700d3019a00a403d700d60464003404f6001301fa00790464
003c0156feab05b4003604000000060600b906060130060600f7060600f6
0856002907e5004b04d3005d07e5004b04d3005d0333006604640025034a
00690464003c0464007905b4006603f4004103ae006a0464002504640025
0464002404640034080000e604d302390800ff8d05440020069600e4057d
002d065c005e07e501820625004e0625004e069600610625004d0625004d
05b4003805b4003705b4003b05b4003b05b4003a05b4010a05b4010b0625
005305b4004a0652006306520063071f00320696002e0464005402000091
05b4003004d3003004d300300856002907e5004c04d3005d07e5004c04d3
005d03f4002f02a200410652006306520063064a002a05b4002b03120053
031200530312005303120000031200000312000003f401a403f4001c03f4
01a403f401a40652007502a2003e02310000057d02a6057d02a6057d0043
0312ff930312025d0312ff9303120023031202810312002303f4001c01a4
001c00000032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200320032003200320032003200320032
003200320032003200320032003200c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c300c3
00c300c300c300c300c300c300c300c300c300c300c300c300c300c30000
0001000000c0006700050000000000020010002f0055000000ee059f0000
00000000000a007e0001000000000000005c00000001000000000003000f
005c0001000000000004000f006b0001000000000006000f007a00030000
0409000000b800890003000004090001001e01410003000004090002000e
015f0003000004090003001e016d0003000004090004001e018b00030000
04090006001e01a9547970656661636520a920546865204d6f6e6f747970
6520436f72706f726174696f6e20706c632e204461746120a92054686520
4d6f6e6f7479706520436f72706f726174696f6e20416c6c205269676874
732052657365727665644254444348562b53796d626f6c4d544254444348
562b53796d626f6c4d544254444348562b53796d626f6c4d540054007900
7000650066006100630065002000a900200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e00200070006c0063002e00200044006100740061002000a900
200054006800650020004d006f006e006f00740079007000650020004300
6f00720070006f0072006100740069006f006e00200041006c006c002000
520069006700680074007300200052006500730065007200760065006400
4200540044004300480056002b00530079006d0062006f006c004d005400
52006500670075006c00610072004200540044004300480056002b005300
79006d0062006f006c004d0054004200540044004300480056002b005300
79006d0062006f006c004d0054004200540044004300480056002b005300
79006d0062006f006c004d0054000000b154124114022702270226022600
6f01160001005f01160001004f01160001003f01160001002f0116000102
2fb22f1f1fb8022eb2a01f1fb8022cb21d291fb80224400be11a1f312712
1f3c27291fb80217403b6c291fe0aa191fe1aa191fab27321f883c321f83
3c321f2f3c321f7627321f3c27291f27aa291f6f276f6d6f866f87043700
161600000012110840b801e3b655140914093790b801bf40390790bd0790
b307906707906407905707904607903607902e07902b0790250790240714
08120810080e080c080a080808060804080208000814b8ffe0402b000001
001406100000010006040000010004100000010010020000010002000000
01000002010802004a00b013034b024b5342014bb0c063004b6220b0f653
23b8010a515ab005234201b0124b004b544218b0382b4bb807ff52b0372b
4bb007505b58b101018e59b0382bb00288b801005458b801ffb101018e85
1bb0124358b9000101ff858d1bb9000101ff858d59590016763f183f123e
113946443e113946443e113946443e113946443e11394660443e11394660
442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b4b5079bc
001f01750007001f0174b3071f93072b2b2b4b5379bc0090017500070090
0174b3079093072b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d59
01b341b5407b456523456023456560234560b08b766818b080622020b140
b54565234520b003266062636820b003266165b0b5236544b040234420b1
417b4565234520b003266062636820b003266165b07b236544b0412344b1
007b455458b17b406544b24140414523614459b9004e0162b12a8e456523
456023456560234560b089766818b080622020b9002a01624565234520b0
03266062636820b003266165b80162236544b02a234420b14e8e45652345
20b003266062636820b003266165b08e236544b04e2344b1008e455458b1
8e406544b24e404e452361445945695342014b5058b108004259435c58b1
08004259b3020b0a124358601b2159421610703eb0124358b93b21187e1b
ba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba0400
0400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a8040000
0b2b59b0102342b0112342002b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
7373737373001845694418456944435c58b9ffc00280b2121f322b592b00
00>
[391 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 100 80 <00010000fe4603fd03940032008b40162427212c2a1001312c1002030a16
133229062e6c130ab802794009066c0d47130b1d0f34b8011bb3010a4409
b801f2400c0132313c00013c31292a2831b801f7400d271a2f21a4166a2a
8827193334b80149b321c37c182b2b4ef44dededf4ed10e43c103c10fd3c
fd3c10f6ed10e6003f3ff4fde410ed3f3c11391117390111123912391112
393130011114171616333236373306062322262706062322262706171615
140623222726353437363736351133111416163332363711033a0b092414
192b0a2911624b4a580966b7432d5629021b13372324171f0c1c070ca822
582c348e490394fda57830221e324a86665a6f71592322916c4d1f36401c
26391c2a5e467854031dfdbf665a343e4502b200>GOFRMX+SymbolMT AddT42Char 
1 0 0 <0002006700000467050000030007003b401e06076302010005046303000a
0605630303021a09070463010019082938182b4e10f43c4dfd3c4e10f63c
4d10fd3c003f3cfd3c3f3cfd3c31303311211125211121670400fc2003c0
fc400500fb002004c000>GOFRMX+SymbolMT AddT42Char 
GOFRMX+SymbolMT /CharStrings get begin
/g80 80 def
end
GOFRMX+SymbolMT /Encoding get
dup 32 /g80 put
pop
end
%ADOEndSubsetFont
/CLCRNA+SymbolMT /GOFRMX+SymbolMT findfont ct_VMDictPut/CLCRNA+SymbolMT*1 [32{/.notdef}rp /g80 223{/.notdef}rp]CLCRNA+SymbolMT nfCLCRNA+SymbolMT*1 [0 -12 -12 0 0 0 ]msf409.413 49.656 mo( )shCLCRMY+ArialMT*1 [0 -12 -12 0 0 0 ]msf409.413 42.7439 mo(m\))[-9.99591 0 ]ysh.777005 .349767 .724269 .205051 cmyk
CLCRMY+ArialMT*1 [6.6667 0 0 -6.6667 0 0 ]msf43.2959 269.558 mo(0)sh50.792 233.371 mo
52.034 233.371 li
@
50.792 67.025 mo
52.034 67.025 li
@
50.792 54.611 mo
52.034 54.611 li
@
50.792 44.6803 mo
52.034 44.6803 li
@
50.792 35.9904 mo
52.034 35.9904 li
@
50.792 28.5421 mo
52.034 28.5421 li
@
50.792 22.3351 mo
52.034 22.3351 li
@
CLCRMY+ArialMT*1 [6.6667 0 0 -6.6667 0 0 ]msf43.2959 14.4538 mo(2)shCLCRMY+ArialMT*1 [10 0 0 -10 0 0 ]msf32.7441 275.144 mo(10)[5.56 0 ]xsh50.792 210.404 mo
52.034 210.404 li
@
50.792 194.886 mo
52.034 194.886 li
@
50.792 182.472 mo
52.034 182.472 li
@
50.792 172.543 mo
52.034 172.543 li
@
50.792 163.853 mo
52.034 163.853 li
@
50.792 156.404 mo
52.034 156.404 li
@
50.792 149.578 mo
52.034 149.578 li
@
50.792 143.99 mo
52.034 143.99 li
@
50.792 143.99 mo
53.896 143.99 li
@
50.792 105.508 mo
52.034 105.508 li
@
50.792 83.1632 mo
52.034 83.1632 li
@
%ADOBeginSubsetFont: OXVQMX+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OXVQMX+ArialMT gcheck setglobal} if
2 7846 58 <000100190000077605ba0018027cb9000ffffe400b0c0c425502020c0c42
550eb8fffab40c0c42550fb8fffd400b0c0c425502030c0c42550eb8fffa
b40b0b42550fb8fff440290b0b425504060b0b4255030a0b0b4255020e0b
0b4255040c0c0c4255030c0c0c4255020c0c0c42550eb8fff4b40d0d4255
0fb8ffeab40d0d42550fb8fff4b40c0c42550cb8ffd4b40b0d425505b8ff
d4402a0b0d42552900261129122618390036113912361849004711491247
185800571158125718109808980f02b10602435458403310011a192b1534
05340c4405440c4b155405540c5b156405640c6b157405740c7b150f0515
0c030001120800080f0208020102003f3f3f3f3f111217395d0111123939
1b401e030405050206070808050a0b0c0c090d0e0f0f0c14131212151617
181815b8ff3cb305001820b8ff3cb30c121120b8ff3c405a150809200005
020220010014010100180508081e151814151518120c09091e1512141515
12110c0f0f2010111410101112090c081815050f11100c000205150c0503
18100f0f0909080802020102181212111100081a17171a10410901510020
000c015100150151004000050151b620200101011919b8018bb1a8182b4e
10f45d1a194dfd1a18fdfd1a19fd184e456544e6003f3c103c103c3f3c10
3c103c103c103c121739011239391112393911123939113939874d2e2b87
7dc4872e182b877dc4872e182b877dc4872e182b877dc42b2b2b870e10c4
c4870e103cc4870e10c4c4870e10c4c4870e10c4c4870e10c4c4014bb00f
534bb011515a58b2120a18b8fff6383859014bb025534bb02a515a58b900
00ffc03859004bb00b534bb00e515a58b30c40054038385959313001725d
002b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b21013313161736370133
131217363713330123012627060701019efe7bc7df241a380a0117ead24f
231c2de6c3fe6ebbfecb27071714fec905bafc3f9795eb2403defd1afeec
f38bb403aefa46045d8c206547fba300>OXVQMX+ArialMT AddT42Char 
OXVQMX+ArialMT /CharStrings get begin
/W 58 def
end
OXVQMX+ArialMT /Encoding get
dup 87 /W put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CLCRMY+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three /four 2{/.notdef}rp /seven 12{/.notdef}rp /D /E 3{/.notdef}rp /I 3{/.notdef}rp /M /N 3{/.notdef}rp /R /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 2{/.notdef}rp /x 135{/.notdef}rp]CLCRMY+ArialMT nfCLCRMY+ArialMT*1 [10 0 0 -10 0 0 ]msf32.7441 20.0402 mo(10)[5.56 0 ]xshCLCRMY+ArialMT*1 [0 -12 -12 0 0 0 ]msf44.1025 224.371 mo(Maximum Wire Diameter \()[-9.99591 -6.672 -6 -2.664 -9.99591 -6.672 -9.99591 -3.336 -11.328 -2.664 -3.99591 -6.672 -3.336 -8.664 -2.664 -6.672 -9.99591 -6.672 -3.336 -6.672 -3.99591 -3.336 0 ]yshCLCRNA+SymbolMT*1 [0 -12 -12 0 0 0 ]msf44.1025 85.0272 mo( )shCLCRMY+ArialMT*1 [0 -12 -12 0 0 0 ]msf44.1025 78.1151 mo(m\))[-9.99591 0 ]ysh2 lw
51.7256 263.784 mo
57.9326 258.819 li
64.7606 254.473 li
70.9676 250.129 li
77.7946 245.784 li
84.0016 242.06 li
90.8296 237.716 li
97.0366 234.612 li
103.864 230.888 li
110.071 227.784 li
116.899 224.06 li
123.726 220.957 li
129.933 218.473 li
136.761 215.371 li
142.968 212.266 li
149.795 209.784 li
156.003 207.302 li
162.83 204.819 li
169.037 202.336 li
175.864 199.853 li
182.692 197.371 li
188.899 195.509 li
195.726 193.026 li
201.933 191.164 li
208.761 188.68 li
214.968 186.819 li
221.795 184.957 li
228.002 183.095 li
234.83 181.233 li
241.037 179.371 li
247.864 177.509 li
254.692 175.646 li
260.899 173.784 li
267.727 171.922 li
273.932 170.68 li
280.76 168.819 li
286.967 166.957 li
293.795 165.716 li
300.002 163.853 li
306.829 162.612 li
313.657 161.371 li
319.864 159.509 li
326.692 158.266 li
332.899 157.026 li
339.727 155.164 li
345.932 153.922 li
352.76 152.68 li
358.967 151.44 li
365.795 150.198 li
372.622 148.957 li
@
1 lw
50.792 271.853 mo
50.792 16.7492 li
@
28.7266 271.798 mo
28.7266 16.6945 li
.284337 .519432 1 .102052 cmyk
@
28.7266 271.798 mo
29.9686 271.798 li
@
28.7266 271.798 mo
31.8306 271.798 li
@
CLCRMY+ArialMT*1 [10 0 0 -10 0 0 ]msf10.1064 275.523 mo(10)[5.56 0 ]xshCLCRMY+ArialMT*1 [6.6667 0 0 -6.6667 0 0 ]msf20.6582 269.937 mo(2)sh28.7266 245.729 mo
29.9686 245.729 li
@
28.7266 230.833 mo
29.9686 230.833 li
@
28.7266 220.281 mo
29.9686 220.281 li
@
28.7266 212.212 mo
29.9686 212.212 li
@
28.7266 205.385 mo
29.9686 205.385 li
@
28.7266 199.798 mo
29.9686 199.798 li
@
28.7266 194.833 mo
29.9686 194.833 li
@
28.7266 190.488 mo
29.9686 190.488 li
@
28.7266 186.764 mo
29.9686 186.764 li
@
28.7266 186.764 mo
31.8306 186.764 li
@
28.7266 160.695 mo
29.9686 160.695 li
@
28.7266 145.798 mo
29.9686 145.798 li
@
28.7266 135.247 mo
29.9686 135.247 li
@
28.7266 127.178 mo
29.9686 127.178 li
@
28.7266 120.35 mo
29.9686 120.35 li
@
28.7266 114.764 mo
29.9686 114.764 li
@
28.7266 109.798 mo
29.9686 109.798 li
@
28.7266 105.454 mo
29.9686 105.454 li
@
28.7266 101.729 mo
29.9686 101.729 li
@
28.7266 101.729 mo
31.8306 101.729 li
@
28.7266 75.6608 mo
29.9686 75.6608 li
@
28.7266 60.7638 mo
29.9686 60.7638 li
@
28.7266 50.2121 mo
29.9686 50.2121 li
@
28.7266 42.1432 mo
29.9686 42.1432 li
@
28.7266 35.3161 mo
29.9686 35.3161 li
@
28.7266 29.7291 mo
29.9686 29.7291 li
@
28.7266 24.7638 mo
29.9686 24.7638 li
@
28.7266 20.4191 mo
29.9686 20.4191 li
@
28.7266 16.695 mo
29.9686 16.695 li
@
28.7266 16.695 mo
31.8306 16.695 li
@
%ADOBeginSubsetFont: OXVQMX+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OXVQMX+ArialMT gcheck setglobal} if
2 2998 24 <00010055ffe7042105a6001e01fc4013130c0c0c4255120c0c0c42550b18
0c0c425509b8ffe8400b0c0c425503180c0c425505b8ffe840170c0c4255
130c0b0b4255120c0b0b425503180b0b425509b8ffe8b40b0b425505b8ff
e840170b0b4255130c0d0d4255120c0d0d42550b180d0d425505b8ffe8b4
0d0d425509b8ffe8b30d0d4255b10202435458b90001ffc0400d0d0d0255
011c0e0a1e15151c12b802bb400b0f04041e1c0d0e01000718b8ffeab40f
0f025518b8ffeab40d0d0255182f2b2bcd2fcd2f003fed3fed12392ffdc4
10c42b31301b4029120c0d0d06550f0c0d0d06554b1a791d8a1d9613a713
c30cd60cdb1b080913180e2a1a03093005300bbaffe00003ffe04010130a
15121313ca0e0f140e13140e0f0db802a440130e0a1e15400ea00e020e0e
0f40150115151c12b802bbb70f0401d340000100b801184011041e1c0d11
5f106f107f108f1004108007b8fff4b40c0c425507b8fff2b40b0b425507
b8fff840140d0d425507731840212334301801001810180218b8fff4b70d
0d065518902012bc0135000f0195000d0138b20eb501ba01380000ffc040
0b212334200040000200901fb80192b18b182b10f65d2bedf4edf4ed10f6
2b5d712bed2b2b2bf45d3c003fedfd5de43fed12392f5d11392f5d10ed10
e487082e2b057d10c4001112393130013838383801715d2b2b592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b133716163332363534262322060727132115
2103363332001514070623222655bd15996c82b4ad8c578c28a98e02d9fd
b74f8491c00108748df4c8fd0180108a8bc4a29ab24f3f1602f1acfe765c
fef6d1c791b2e000>OXVQMX+ArialMT AddT42Char 
OXVQMX+ArialMT /CharStrings get begin
/five 24 def
end
OXVQMX+ArialMT /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CLCRMY+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three /four /five /.notdef /seven 12{/.notdef}rp /D /E 3{/.notdef}rp /I 3{/.notdef}rp /M /N 3{/.notdef}rp /R /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 2{/.notdef}rp /x 135{/.notdef}rp]CLCRMY+ArialMT nfCLCRMY+ArialMT*1 [10 0 0 -10 0 0 ]msf10.1064 20.4191 mo(10)[5.56 0 ]xshCLCRMY+ArialMT*1 [6.6667 0 0 -6.6667 0 0 ]msf20.6582 14.8327 mo(5)shCLCRMY+ArialMT*1 [0 -12 -12 0 0 0 ]msf20.6592 233.957 mo(Number of Neurons per Electrode)[-8.664 -6.672 -9.99591 -6.672 -6.672 -3.99591 -3.336 -6.672 -3.336 -3.336 -8.664 -6.672 -6.672 -3.99591 -6.672 -6.672 -6 -3.336 -6.672 -6.672 -3.99591 -3.336 -8.00409 -2.664 -6.672 -6 -3.336 -3.99591 -6.672 -6.672 0 ]ysh2 lw
51.7266 245.729 mo
57.9336 239.523 li
64.7616 233.316 li
70.9686 227.109 li
77.7956 221.523 li
84.0026 215.936 li
90.8306 210.971 li
97.0376 206.005 li
103.865 201.661 li
110.072 197.316 li
116.9 192.971 li
123.727 188.625 li
129.934 184.902 li
136.762 181.178 li
142.969 177.454 li
149.796 173.729 li
156.004 170.005 li
162.831 166.902 li
169.038 163.798 li
175.865 160.074 li
182.693 156.971 li
188.9 154.488 li
195.727 151.385 li
201.934 148.281 li
208.762 145.798 li
214.969 142.695 li
221.796 140.212 li
228.003 137.729 li
234.831 135.247 li
241.038 132.764 li
247.866 130.281 li
254.693 127.798 li
260.9 125.316 li
267.728 123.454 li
273.934 120.971 li
280.762 119.109 li
286.969 116.626 li
293.796 114.764 li
300.003 112.902 li
306.831 110.419 li
313.659 108.557 li
319.866 106.695 li
326.693 104.833 li
332.9 102.971 li
339.728 101.109 li
345.934 99.2471 li
352.762 97.3841 li
358.969 95.5231 li
365.796 93.6611 li
372.623 92.4191 li
@
52.3643 100.496 mo
58.5173 107.324 li
65.2843 113.531 li
71.4373 119.737 li
78.2063 125.324 li
84.9743 130.289 li
91.1273 135.256 li
97.8953 140.221 li
104.662 145.185 li
110.815 149.531 li
117.584 153.875 li
123.736 157.6 li
130.503 161.944 li
137.272 165.669 li
143.425 169.393 li
150.193 173.117 li
156.962 176.22 li
163.114 179.944 li
169.881 183.048 li
176.65 186.151 li
182.802 189.255 li
189.57 192.358 li
195.723 195.462 li
202.49 197.944 li
209.259 201.048 li
215.411 203.531 li
222.179 206.014 li
228.948 209.117 li
235.1 211.6 li
241.869 214.082 li
248.021 216.565 li
254.789 218.427 li
261.557 220.91 li
267.711 223.393 li
274.478 225.255 li
281.245 227.737 li
287.398 229.6 li
294.167 232.082 li
300.934 233.944 li
307.088 235.807 li
313.856 237.669 li
320.009 240.151 li
326.776 242.014 li
333.545 243.876 li
339.698 245.737 li
346.465 247.6 li
353.233 248.841 li
359.385 250.703 li
366.153 252.565 li
372.922 254.427 li
3.0518e-05 .993988 1 3.0518e-05 cmyk
@
1 lw
373.863 271.806 mo
373.863 16.7023 li
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/CLCRMY+ArialMT*1 uf/CLCRMY+ArialMT uf/OXVQMX+ArialMT uf/CLCRNA+SymbolMT*1 uf/CLCRNA+SymbolMT uf/GOFRMX+SymbolMT uf/CLCRMZ+Arial-ItalicMT*1 uf/CLCRMZ+Arial-ItalicMT uf/MYBBAA+Arial-ItalicMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
